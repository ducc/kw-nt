// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0
// 	protoc        v3.12.3
// source: protos.proto

package protos

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Broker_Name int32

const (
	Broker_UNKNOWN    Broker_Name = 0
	Broker_XTB_DEMO   Broker_Name = 1
	Broker_XTB_RETAIL Broker_Name = 2
	Broker_XTB_PRO    Broker_Name = 3
)

// Enum value maps for Broker_Name.
var (
	Broker_Name_name = map[int32]string{
		0: "UNKNOWN",
		1: "XTB_DEMO",
		2: "XTB_RETAIL",
		3: "XTB_PRO",
	}
	Broker_Name_value = map[string]int32{
		"UNKNOWN":    0,
		"XTB_DEMO":   1,
		"XTB_RETAIL": 2,
		"XTB_PRO":    3,
	}
)

func (x Broker_Name) Enum() *Broker_Name {
	p := new(Broker_Name)
	*p = x
	return p
}

func (x Broker_Name) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Broker_Name) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_proto_enumTypes[0].Descriptor()
}

func (Broker_Name) Type() protoreflect.EnumType {
	return &file_protos_proto_enumTypes[0]
}

func (x Broker_Name) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Broker_Name.Descriptor instead.
func (Broker_Name) EnumDescriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{1, 0}
}

type PriceType_Name int32

const (
	PriceType_UNKNOWN PriceType_Name = 0
	PriceType_OPEN    PriceType_Name = 1
	PriceType_CLOSE   PriceType_Name = 2
)

// Enum value maps for PriceType_Name.
var (
	PriceType_Name_name = map[int32]string{
		0: "UNKNOWN",
		1: "OPEN",
		2: "CLOSE",
	}
	PriceType_Name_value = map[string]int32{
		"UNKNOWN": 0,
		"OPEN":    1,
		"CLOSE":   2,
	}
)

func (x PriceType_Name) Enum() *PriceType_Name {
	p := new(PriceType_Name)
	*p = x
	return p
}

func (x PriceType_Name) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PriceType_Name) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_proto_enumTypes[1].Descriptor()
}

func (PriceType_Name) Type() protoreflect.EnumType {
	return &file_protos_proto_enumTypes[1]
}

func (x PriceType_Name) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PriceType_Name.Descriptor instead.
func (PriceType_Name) EnumDescriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{3, 0}
}

type OpenType_Name int32

const (
	OpenType_UNKNOWN OpenType_Name = 0
	OpenType_NORMAL  OpenType_Name = 1
	OpenType_REVERSE OpenType_Name = 2
)

// Enum value maps for OpenType_Name.
var (
	OpenType_Name_name = map[int32]string{
		0: "UNKNOWN",
		1: "NORMAL",
		2: "REVERSE",
	}
	OpenType_Name_value = map[string]int32{
		"UNKNOWN": 0,
		"NORMAL":  1,
		"REVERSE": 2,
	}
)

func (x OpenType_Name) Enum() *OpenType_Name {
	p := new(OpenType_Name)
	*p = x
	return p
}

func (x OpenType_Name) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OpenType_Name) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_proto_enumTypes[2].Descriptor()
}

func (OpenType_Name) Type() protoreflect.EnumType {
	return &file_protos_proto_enumTypes[2]
}

func (x OpenType_Name) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OpenType_Name.Descriptor instead.
func (OpenType_Name) EnumDescriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{4, 0}
}

type Rule_Indicator_SimpleMovingAverage_Condition int32

const (
	Rule_Indicator_SimpleMovingAverage_UNKNOWN           Rule_Indicator_SimpleMovingAverage_Condition = 0
	Rule_Indicator_SimpleMovingAverage_ABOVE_SIGNAL_LINE Rule_Indicator_SimpleMovingAverage_Condition = 1
	Rule_Indicator_SimpleMovingAverage_BELOW_SIGNAL_LINE Rule_Indicator_SimpleMovingAverage_Condition = 2
)

// Enum value maps for Rule_Indicator_SimpleMovingAverage_Condition.
var (
	Rule_Indicator_SimpleMovingAverage_Condition_name = map[int32]string{
		0: "UNKNOWN",
		1: "ABOVE_SIGNAL_LINE",
		2: "BELOW_SIGNAL_LINE",
	}
	Rule_Indicator_SimpleMovingAverage_Condition_value = map[string]int32{
		"UNKNOWN":           0,
		"ABOVE_SIGNAL_LINE": 1,
		"BELOW_SIGNAL_LINE": 2,
	}
)

func (x Rule_Indicator_SimpleMovingAverage_Condition) Enum() *Rule_Indicator_SimpleMovingAverage_Condition {
	p := new(Rule_Indicator_SimpleMovingAverage_Condition)
	*p = x
	return p
}

func (x Rule_Indicator_SimpleMovingAverage_Condition) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Rule_Indicator_SimpleMovingAverage_Condition) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_proto_enumTypes[3].Descriptor()
}

func (Rule_Indicator_SimpleMovingAverage_Condition) Type() protoreflect.EnumType {
	return &file_protos_proto_enumTypes[3]
}

func (x Rule_Indicator_SimpleMovingAverage_Condition) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Rule_Indicator_SimpleMovingAverage_Condition.Descriptor instead.
func (Rule_Indicator_SimpleMovingAverage_Condition) EnumDescriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{5, 0, 0, 0}
}

type Rule_Indicator_RelativeStrengthIndex_Condition int32

const (
	Rule_Indicator_RelativeStrengthIndex_UNKNOWN                Rule_Indicator_RelativeStrengthIndex_Condition = 0
	Rule_Indicator_RelativeStrengthIndex_ABOVE_OVER_BOUGHT_LINE Rule_Indicator_RelativeStrengthIndex_Condition = 1
	Rule_Indicator_RelativeStrengthIndex_BELOW_OVER_BOUGHT_LINE Rule_Indicator_RelativeStrengthIndex_Condition = 2
	Rule_Indicator_RelativeStrengthIndex_ABOVE_OVER_SOLD_LINE   Rule_Indicator_RelativeStrengthIndex_Condition = 3
	Rule_Indicator_RelativeStrengthIndex_BELOW_OVER_SOLD_LINE   Rule_Indicator_RelativeStrengthIndex_Condition = 4
)

// Enum value maps for Rule_Indicator_RelativeStrengthIndex_Condition.
var (
	Rule_Indicator_RelativeStrengthIndex_Condition_name = map[int32]string{
		0: "UNKNOWN",
		1: "ABOVE_OVER_BOUGHT_LINE",
		2: "BELOW_OVER_BOUGHT_LINE",
		3: "ABOVE_OVER_SOLD_LINE",
		4: "BELOW_OVER_SOLD_LINE",
	}
	Rule_Indicator_RelativeStrengthIndex_Condition_value = map[string]int32{
		"UNKNOWN":                0,
		"ABOVE_OVER_BOUGHT_LINE": 1,
		"BELOW_OVER_BOUGHT_LINE": 2,
		"ABOVE_OVER_SOLD_LINE":   3,
		"BELOW_OVER_SOLD_LINE":   4,
	}
)

func (x Rule_Indicator_RelativeStrengthIndex_Condition) Enum() *Rule_Indicator_RelativeStrengthIndex_Condition {
	p := new(Rule_Indicator_RelativeStrengthIndex_Condition)
	*p = x
	return p
}

func (x Rule_Indicator_RelativeStrengthIndex_Condition) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Rule_Indicator_RelativeStrengthIndex_Condition) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_proto_enumTypes[4].Descriptor()
}

func (Rule_Indicator_RelativeStrengthIndex_Condition) Type() protoreflect.EnumType {
	return &file_protos_proto_enumTypes[4]
}

func (x Rule_Indicator_RelativeStrengthIndex_Condition) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Rule_Indicator_RelativeStrengthIndex_Condition.Descriptor instead.
func (Rule_Indicator_RelativeStrengthIndex_Condition) EnumDescriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{5, 0, 1, 0}
}

type Rule_Indicator_MACD_Condition int32

const (
	Rule_Indicator_MACD_UNKNOWN                Rule_Indicator_MACD_Condition = 0
	Rule_Indicator_MACD_SIGNAL_LINE_ABOVE_MACD Rule_Indicator_MACD_Condition = 1
	Rule_Indicator_MACD_SIGNAL_LINE_BELOW_MACD Rule_Indicator_MACD_Condition = 2
)

// Enum value maps for Rule_Indicator_MACD_Condition.
var (
	Rule_Indicator_MACD_Condition_name = map[int32]string{
		0: "UNKNOWN",
		1: "SIGNAL_LINE_ABOVE_MACD",
		2: "SIGNAL_LINE_BELOW_MACD",
	}
	Rule_Indicator_MACD_Condition_value = map[string]int32{
		"UNKNOWN":                0,
		"SIGNAL_LINE_ABOVE_MACD": 1,
		"SIGNAL_LINE_BELOW_MACD": 2,
	}
)

func (x Rule_Indicator_MACD_Condition) Enum() *Rule_Indicator_MACD_Condition {
	p := new(Rule_Indicator_MACD_Condition)
	*p = x
	return p
}

func (x Rule_Indicator_MACD_Condition) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Rule_Indicator_MACD_Condition) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_proto_enumTypes[5].Descriptor()
}

func (Rule_Indicator_MACD_Condition) Type() protoreflect.EnumType {
	return &file_protos_proto_enumTypes[5]
}

func (x Rule_Indicator_MACD_Condition) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Rule_Indicator_MACD_Condition.Descriptor instead.
func (Rule_Indicator_MACD_Condition) EnumDescriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{5, 0, 2, 0}
}

type Rule_Indicator_BollingerBands_Condition int32

const (
	Rule_Indicator_BollingerBands_UNKNOWN                Rule_Indicator_BollingerBands_Condition = 0
	Rule_Indicator_BollingerBands_PRICE_ABOVE_UPPER_BAND Rule_Indicator_BollingerBands_Condition = 1
	Rule_Indicator_BollingerBands_PRICE_BELOW_UPPER_BAND Rule_Indicator_BollingerBands_Condition = 2
	Rule_Indicator_BollingerBands_PRICE_ABOVE_LOWER_BAND Rule_Indicator_BollingerBands_Condition = 3
	Rule_Indicator_BollingerBands_PRICE_BELOW_LOWER_BAND Rule_Indicator_BollingerBands_Condition = 4
	Rule_Indicator_BollingerBands_PRICE_ABOVE_MA         Rule_Indicator_BollingerBands_Condition = 5
	Rule_Indicator_BollingerBands_PRICE_BELOW_MA         Rule_Indicator_BollingerBands_Condition = 6
)

// Enum value maps for Rule_Indicator_BollingerBands_Condition.
var (
	Rule_Indicator_BollingerBands_Condition_name = map[int32]string{
		0: "UNKNOWN",
		1: "PRICE_ABOVE_UPPER_BAND",
		2: "PRICE_BELOW_UPPER_BAND",
		3: "PRICE_ABOVE_LOWER_BAND",
		4: "PRICE_BELOW_LOWER_BAND",
		5: "PRICE_ABOVE_MA",
		6: "PRICE_BELOW_MA",
	}
	Rule_Indicator_BollingerBands_Condition_value = map[string]int32{
		"UNKNOWN":                0,
		"PRICE_ABOVE_UPPER_BAND": 1,
		"PRICE_BELOW_UPPER_BAND": 2,
		"PRICE_ABOVE_LOWER_BAND": 3,
		"PRICE_BELOW_LOWER_BAND": 4,
		"PRICE_ABOVE_MA":         5,
		"PRICE_BELOW_MA":         6,
	}
)

func (x Rule_Indicator_BollingerBands_Condition) Enum() *Rule_Indicator_BollingerBands_Condition {
	p := new(Rule_Indicator_BollingerBands_Condition)
	*p = x
	return p
}

func (x Rule_Indicator_BollingerBands_Condition) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Rule_Indicator_BollingerBands_Condition) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_proto_enumTypes[6].Descriptor()
}

func (Rule_Indicator_BollingerBands_Condition) Type() protoreflect.EnumType {
	return &file_protos_proto_enumTypes[6]
}

func (x Rule_Indicator_BollingerBands_Condition) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Rule_Indicator_BollingerBands_Condition.Descriptor instead.
func (Rule_Indicator_BollingerBands_Condition) EnumDescriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{5, 0, 3, 0}
}

type Rule_Indicator_SimpleStopLoss_Type int32

const (
	Rule_Indicator_SimpleStopLoss_UNKNOWN      Rule_Indicator_SimpleStopLoss_Type = 0
	Rule_Indicator_SimpleStopLoss_FIXED        Rule_Indicator_SimpleStopLoss_Type = 1
	Rule_Indicator_SimpleStopLoss_BAR_TRAILING Rule_Indicator_SimpleStopLoss_Type = 2
)

// Enum value maps for Rule_Indicator_SimpleStopLoss_Type.
var (
	Rule_Indicator_SimpleStopLoss_Type_name = map[int32]string{
		0: "UNKNOWN",
		1: "FIXED",
		2: "BAR_TRAILING",
	}
	Rule_Indicator_SimpleStopLoss_Type_value = map[string]int32{
		"UNKNOWN":      0,
		"FIXED":        1,
		"BAR_TRAILING": 2,
	}
)

func (x Rule_Indicator_SimpleStopLoss_Type) Enum() *Rule_Indicator_SimpleStopLoss_Type {
	p := new(Rule_Indicator_SimpleStopLoss_Type)
	*p = x
	return p
}

func (x Rule_Indicator_SimpleStopLoss_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Rule_Indicator_SimpleStopLoss_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_proto_enumTypes[7].Descriptor()
}

func (Rule_Indicator_SimpleStopLoss_Type) Type() protoreflect.EnumType {
	return &file_protos_proto_enumTypes[7]
}

func (x Rule_Indicator_SimpleStopLoss_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Rule_Indicator_SimpleStopLoss_Type.Descriptor instead.
func (Rule_Indicator_SimpleStopLoss_Type) EnumDescriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{5, 0, 6, 0}
}

type Status_Name int32

const (
	Status_UNKNOWN Status_Name = 0
	Status_ENABLED Status_Name = 1
	Status_PAUSED  Status_Name = 2
)

// Enum value maps for Status_Name.
var (
	Status_Name_name = map[int32]string{
		0: "UNKNOWN",
		1: "ENABLED",
		2: "PAUSED",
	}
	Status_Name_value = map[string]int32{
		"UNKNOWN": 0,
		"ENABLED": 1,
		"PAUSED":  2,
	}
)

func (x Status_Name) Enum() *Status_Name {
	p := new(Status_Name)
	*p = x
	return p
}

func (x Status_Name) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status_Name) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_proto_enumTypes[8].Descriptor()
}

func (Status_Name) Type() protoreflect.EnumType {
	return &file_protos_proto_enumTypes[8]
}

func (x Status_Name) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status_Name.Descriptor instead.
func (Status_Name) EnumDescriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{6, 0}
}

type Direction_Name int32

const (
	Direction_UNKNOWN Direction_Name = 0
	Direction_BUY     Direction_Name = 1
	Direction_SELL    Direction_Name = 2
)

// Enum value maps for Direction_Name.
var (
	Direction_Name_name = map[int32]string{
		0: "UNKNOWN",
		1: "BUY",
		2: "SELL",
	}
	Direction_Name_value = map[string]int32{
		"UNKNOWN": 0,
		"BUY":     1,
		"SELL":    2,
	}
)

func (x Direction_Name) Enum() *Direction_Name {
	p := new(Direction_Name)
	*p = x
	return p
}

func (x Direction_Name) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Direction_Name) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_proto_enumTypes[9].Descriptor()
}

func (Direction_Name) Type() protoreflect.EnumType {
	return &file_protos_proto_enumTypes[9]
}

func (x Direction_Name) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Direction_Name.Descriptor instead.
func (Direction_Name) EnumDescriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{7, 0}
}

type Symbol_Name int32

const (
	Symbol_UNKNOWN Symbol_Name = 0
	// FX
	Symbol_AUD_USD Symbol_Name = 100
	Symbol_EUR_USD Symbol_Name = 101
	Symbol_EUR_CHF Symbol_Name = 102
	Symbol_GBP_JPY Symbol_Name = 103
	Symbol_USD_CHF Symbol_Name = 104
	Symbol_USD_GBP Symbol_Name = 105
	Symbol_USD_CAD Symbol_Name = 106
	Symbol_USD_JPY Symbol_Name = 107
	// CRYPTO
	Symbol_BITCOIN  Symbol_Name = 200
	Symbol_LITECOIN Symbol_Name = 201
	Symbol_ETHEREUM Symbol_Name = 202
	// INDICIES
	Symbol_US_30  Symbol_Name = 300
	Symbol_UK_100 Symbol_Name = 301
	Symbol_DE_30  Symbol_Name = 302
	// COMMODITIES
	Symbol_SILVER Symbol_Name = 400
	Symbol_GOLD   Symbol_Name = 401
)

// Enum value maps for Symbol_Name.
var (
	Symbol_Name_name = map[int32]string{
		0:   "UNKNOWN",
		100: "AUD_USD",
		101: "EUR_USD",
		102: "EUR_CHF",
		103: "GBP_JPY",
		104: "USD_CHF",
		105: "USD_GBP",
		106: "USD_CAD",
		107: "USD_JPY",
		200: "BITCOIN",
		201: "LITECOIN",
		202: "ETHEREUM",
		300: "US_30",
		301: "UK_100",
		302: "DE_30",
		400: "SILVER",
		401: "GOLD",
	}
	Symbol_Name_value = map[string]int32{
		"UNKNOWN":  0,
		"AUD_USD":  100,
		"EUR_USD":  101,
		"EUR_CHF":  102,
		"GBP_JPY":  103,
		"USD_CHF":  104,
		"USD_GBP":  105,
		"USD_CAD":  106,
		"USD_JPY":  107,
		"BITCOIN":  200,
		"LITECOIN": 201,
		"ETHEREUM": 202,
		"US_30":    300,
		"UK_100":   301,
		"DE_30":    302,
		"SILVER":   400,
		"GOLD":     401,
	}
)

func (x Symbol_Name) Enum() *Symbol_Name {
	p := new(Symbol_Name)
	*p = x
	return p
}

func (x Symbol_Name) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Symbol_Name) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_proto_enumTypes[10].Descriptor()
}

func (Symbol_Name) Type() protoreflect.EnumType {
	return &file_protos_proto_enumTypes[10]
}

func (x Symbol_Name) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Symbol_Name.Descriptor instead.
func (Symbol_Name) EnumDescriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{9, 0}
}

type CandlestickWindow_Name int32

const (
	CandlestickWindow_UNKNOWN CandlestickWindow_Name = 0
	// time = in seconds
	CandlestickWindow_ONE_MINUTE    CandlestickWindow_Name = 60
	CandlestickWindow_FIVE_MINUTE   CandlestickWindow_Name = 300
	CandlestickWindow_TEN_MINUTE    CandlestickWindow_Name = 600
	CandlestickWindow_THIRTY_MINUTE CandlestickWindow_Name = 1800
	CandlestickWindow_ONE_HOUR      CandlestickWindow_Name = 3600
	CandlestickWindow_THREE_HOUR    CandlestickWindow_Name = 10800
	CandlestickWindow_SIX_HOUR      CandlestickWindow_Name = 21600
	CandlestickWindow_TWELVE_HOUR   CandlestickWindow_Name = 43200
	CandlestickWindow_ONE_DAY       CandlestickWindow_Name = 86400
)

// Enum value maps for CandlestickWindow_Name.
var (
	CandlestickWindow_Name_name = map[int32]string{
		0:     "UNKNOWN",
		60:    "ONE_MINUTE",
		300:   "FIVE_MINUTE",
		600:   "TEN_MINUTE",
		1800:  "THIRTY_MINUTE",
		3600:  "ONE_HOUR",
		10800: "THREE_HOUR",
		21600: "SIX_HOUR",
		43200: "TWELVE_HOUR",
		86400: "ONE_DAY",
	}
	CandlestickWindow_Name_value = map[string]int32{
		"UNKNOWN":       0,
		"ONE_MINUTE":    60,
		"FIVE_MINUTE":   300,
		"TEN_MINUTE":    600,
		"THIRTY_MINUTE": 1800,
		"ONE_HOUR":      3600,
		"THREE_HOUR":    10800,
		"SIX_HOUR":      21600,
		"TWELVE_HOUR":   43200,
		"ONE_DAY":       86400,
	}
)

func (x CandlestickWindow_Name) Enum() *CandlestickWindow_Name {
	p := new(CandlestickWindow_Name)
	*p = x
	return p
}

func (x CandlestickWindow_Name) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CandlestickWindow_Name) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_proto_enumTypes[11].Descriptor()
}

func (CandlestickWindow_Name) Type() protoreflect.EnumType {
	return &file_protos_proto_enumTypes[11]
}

func (x CandlestickWindow_Name) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CandlestickWindow_Name.Descriptor instead.
func (CandlestickWindow_Name) EnumDescriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{22, 0}
}

type SessionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId      string      `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Broker         Broker_Name `protobuf:"varint,2,opt,name=broker,proto3,enum=protos.Broker_Name" json:"broker,omitempty"`
	ServiceAddress string      `protobuf:"bytes,3,opt,name=service_address,json=serviceAddress,proto3" json:"service_address,omitempty"`
}

func (x *SessionInfo) Reset() {
	*x = SessionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionInfo) ProtoMessage() {}

func (x *SessionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionInfo.ProtoReflect.Descriptor instead.
func (*SessionInfo) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{0}
}

func (x *SessionInfo) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *SessionInfo) GetBroker() Broker_Name {
	if x != nil {
		return x.Broker
	}
	return Broker_UNKNOWN
}

func (x *SessionInfo) GetServiceAddress() string {
	if x != nil {
		return x.ServiceAddress
	}
	return ""
}

type Broker struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name Broker_Name `protobuf:"varint,1,opt,name=name,proto3,enum=protos.Broker_Name" json:"name,omitempty"`
}

func (x *Broker) Reset() {
	*x = Broker{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Broker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Broker) ProtoMessage() {}

func (x *Broker) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Broker.ProtoReflect.Descriptor instead.
func (*Broker) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{1}
}

func (x *Broker) GetName() Broker_Name {
	if x != nil {
		return x.Name
	}
	return Broker_UNKNOWN
}

type Candlestick struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp  *timestamp.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Broker     Broker_Name          `protobuf:"varint,2,opt,name=broker,proto3,enum=protos.Broker_Name" json:"broker,omitempty"`
	Symbol     Symbol_Name          `protobuf:"varint,3,opt,name=symbol,proto3,enum=protos.Symbol_Name" json:"symbol,omitempty"`
	OpenPrice  float64              `protobuf:"fixed64,4,opt,name=open_price,json=openPrice,proto3" json:"open_price,omitempty"`
	ClosePrice float64              `protobuf:"fixed64,5,opt,name=close_price,json=closePrice,proto3" json:"close_price,omitempty"`
	HighPrice  float64              `protobuf:"fixed64,6,opt,name=high_price,json=highPrice,proto3" json:"high_price,omitempty"`
	LowPrice   float64              `protobuf:"fixed64,7,opt,name=low_price,json=lowPrice,proto3" json:"low_price,omitempty"`
	BuyVolume  float64              `protobuf:"fixed64,8,opt,name=buy_volume,json=buyVolume,proto3" json:"buy_volume,omitempty"`
	SellVolume float64              `protobuf:"fixed64,9,opt,name=sell_volume,json=sellVolume,proto3" json:"sell_volume,omitempty"`
}

func (x *Candlestick) Reset() {
	*x = Candlestick{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Candlestick) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Candlestick) ProtoMessage() {}

func (x *Candlestick) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Candlestick.ProtoReflect.Descriptor instead.
func (*Candlestick) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{2}
}

func (x *Candlestick) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Candlestick) GetBroker() Broker_Name {
	if x != nil {
		return x.Broker
	}
	return Broker_UNKNOWN
}

func (x *Candlestick) GetSymbol() Symbol_Name {
	if x != nil {
		return x.Symbol
	}
	return Symbol_UNKNOWN
}

func (x *Candlestick) GetOpenPrice() float64 {
	if x != nil {
		return x.OpenPrice
	}
	return 0
}

func (x *Candlestick) GetClosePrice() float64 {
	if x != nil {
		return x.ClosePrice
	}
	return 0
}

func (x *Candlestick) GetHighPrice() float64 {
	if x != nil {
		return x.HighPrice
	}
	return 0
}

func (x *Candlestick) GetLowPrice() float64 {
	if x != nil {
		return x.LowPrice
	}
	return 0
}

func (x *Candlestick) GetBuyVolume() float64 {
	if x != nil {
		return x.BuyVolume
	}
	return 0
}

func (x *Candlestick) GetSellVolume() float64 {
	if x != nil {
		return x.SellVolume
	}
	return 0
}

type PriceType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name PriceType_Name `protobuf:"varint,1,opt,name=name,proto3,enum=protos.PriceType_Name" json:"name,omitempty"`
}

func (x *PriceType) Reset() {
	*x = PriceType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PriceType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PriceType) ProtoMessage() {}

func (x *PriceType) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PriceType.ProtoReflect.Descriptor instead.
func (*PriceType) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{3}
}

func (x *PriceType) GetName() PriceType_Name {
	if x != nil {
		return x.Name
	}
	return PriceType_UNKNOWN
}

type OpenType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name OpenType_Name `protobuf:"varint,1,opt,name=name,proto3,enum=protos.OpenType_Name" json:"name,omitempty"`
}

func (x *OpenType) Reset() {
	*x = OpenType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenType) ProtoMessage() {}

func (x *OpenType) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenType.ProtoReflect.Descriptor instead.
func (*OpenType) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{4}
}

func (x *OpenType) GetName() OpenType_Name {
	if x != nil {
		return x.Name
	}
	return OpenType_UNKNOWN
}

type Rule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Indicator         *Rule_Indicator `protobuf:"bytes,1,opt,name=indicator,proto3" json:"indicator,omitempty"`
	PriceType         PriceType_Name  `protobuf:"varint,2,opt,name=price_type,json=priceType,proto3,enum=protos.PriceType_Name" json:"price_type,omitempty"`
	OpenType          OpenType_Name   `protobuf:"varint,3,opt,name=open_type,json=openType,proto3,enum=protos.OpenType_Name" json:"open_type,omitempty"`
	PeriodNanoseconds int64           `protobuf:"varint,4,opt,name=period_nanoseconds,json=periodNanoseconds,proto3" json:"period_nanoseconds,omitempty"`
}

func (x *Rule) Reset() {
	*x = Rule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rule) ProtoMessage() {}

func (x *Rule) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rule.ProtoReflect.Descriptor instead.
func (*Rule) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{5}
}

func (x *Rule) GetIndicator() *Rule_Indicator {
	if x != nil {
		return x.Indicator
	}
	return nil
}

func (x *Rule) GetPriceType() PriceType_Name {
	if x != nil {
		return x.PriceType
	}
	return PriceType_UNKNOWN
}

func (x *Rule) GetOpenType() OpenType_Name {
	if x != nil {
		return x.OpenType
	}
	return OpenType_UNKNOWN
}

func (x *Rule) GetPeriodNanoseconds() int64 {
	if x != nil {
		return x.PeriodNanoseconds
	}
	return 0
}

type Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name Status_Name `protobuf:"varint,1,opt,name=name,proto3,enum=protos.Status_Name" json:"name,omitempty"`
}

func (x *Status) Reset() {
	*x = Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{6}
}

func (x *Status) GetName() Status_Name {
	if x != nil {
		return x.Name
	}
	return Status_UNKNOWN
}

type Direction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name Direction_Name `protobuf:"varint,1,opt,name=name,proto3,enum=protos.Direction_Name" json:"name,omitempty"`
}

func (x *Direction) Reset() {
	*x = Direction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Direction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Direction) ProtoMessage() {}

func (x *Direction) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Direction.ProtoReflect.Descriptor instead.
func (*Direction) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{7}
}

func (x *Direction) GetName() Direction_Name {
	if x != nil {
		return x.Name
	}
	return Direction_UNKNOWN
}

type Position struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Direction  Direction_Name       `protobuf:"varint,1,opt,name=direction,proto3,enum=protos.Direction_Name" json:"direction,omitempty"`
	OpenPrice  int64                `protobuf:"varint,2,opt,name=open_price,json=openPrice,proto3" json:"open_price,omitempty"`
	ClosePrice int64                `protobuf:"varint,3,opt,name=close_price,json=closePrice,proto3" json:"close_price,omitempty"`
	OpenTime   *timestamp.Timestamp `protobuf:"bytes,4,opt,name=open_time,json=openTime,proto3" json:"open_time,omitempty"`
	CloseTime  *timestamp.Timestamp `protobuf:"bytes,5,opt,name=close_time,json=closeTime,proto3" json:"close_time,omitempty"`
	Id         string               `protobuf:"bytes,6,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Position) Reset() {
	*x = Position{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Position) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Position) ProtoMessage() {}

func (x *Position) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Position.ProtoReflect.Descriptor instead.
func (*Position) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{8}
}

func (x *Position) GetDirection() Direction_Name {
	if x != nil {
		return x.Direction
	}
	return Direction_UNKNOWN
}

func (x *Position) GetOpenPrice() int64 {
	if x != nil {
		return x.OpenPrice
	}
	return 0
}

func (x *Position) GetClosePrice() int64 {
	if x != nil {
		return x.ClosePrice
	}
	return 0
}

func (x *Position) GetOpenTime() *timestamp.Timestamp {
	if x != nil {
		return x.OpenTime
	}
	return nil
}

func (x *Position) GetCloseTime() *timestamp.Timestamp {
	if x != nil {
		return x.CloseTime
	}
	return nil
}

func (x *Position) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Symbol struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   Symbol_Name `protobuf:"varint,1,opt,name=name,proto3,enum=protos.Symbol_Name" json:"name,omitempty"`
	Broker Broker_Name `protobuf:"varint,2,opt,name=broker,proto3,enum=protos.Broker_Name" json:"broker,omitempty"`
}

func (x *Symbol) Reset() {
	*x = Symbol{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Symbol) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Symbol) ProtoMessage() {}

func (x *Symbol) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Symbol.ProtoReflect.Descriptor instead.
func (*Symbol) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{9}
}

func (x *Symbol) GetName() Symbol_Name {
	if x != nil {
		return x.Name
	}
	return Symbol_UNKNOWN
}

func (x *Symbol) GetBroker() Broker_Name {
	if x != nil {
		return x.Broker
	}
	return Broker_UNKNOWN
}

type RuleSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rules []*Rule `protobuf:"bytes,1,rep,name=rules,proto3" json:"rules,omitempty"`
}

func (x *RuleSet) Reset() {
	*x = RuleSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuleSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleSet) ProtoMessage() {}

func (x *RuleSet) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleSet.ProtoReflect.Descriptor instead.
func (*RuleSet) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{10}
}

func (x *RuleSet) GetRules() []*Rule {
	if x != nil {
		return x.Rules
	}
	return nil
}

type Strategy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	EntryRules    *RuleSet             `protobuf:"bytes,2,opt,name=entry_rules,json=entryRules,proto3" json:"entry_rules,omitempty"`
	ExitRules     *RuleSet             `protobuf:"bytes,3,opt,name=exit_rules,json=exitRules,proto3" json:"exit_rules,omitempty"`
	TradeSize     int64                `protobuf:"varint,4,opt,name=trade_size,json=tradeSize,proto3" json:"trade_size,omitempty"`
	TakeProfit    int64                `protobuf:"varint,5,opt,name=take_profit,json=takeProfit,proto3" json:"take_profit,omitempty"`
	StopLoss      int64                `protobuf:"varint,6,opt,name=stop_loss,json=stopLoss,proto3" json:"stop_loss,omitempty"`
	Status        Status_Name          `protobuf:"varint,7,opt,name=status,proto3,enum=protos.Status_Name" json:"status,omitempty"`
	Id            string               `protobuf:"bytes,8,opt,name=id,proto3" json:"id,omitempty"`
	Symbol        *Symbol              `protobuf:"bytes,9,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Positions     []*Position          `protobuf:"bytes,10,rep,name=positions,proto3" json:"positions,omitempty"`
	LastEvaluated *timestamp.Timestamp `protobuf:"bytes,11,opt,name=last_evaluated,json=lastEvaluated,proto3" json:"last_evaluated,omitempty"`
}

func (x *Strategy) Reset() {
	*x = Strategy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Strategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Strategy) ProtoMessage() {}

func (x *Strategy) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Strategy.ProtoReflect.Descriptor instead.
func (*Strategy) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{11}
}

func (x *Strategy) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Strategy) GetEntryRules() *RuleSet {
	if x != nil {
		return x.EntryRules
	}
	return nil
}

func (x *Strategy) GetExitRules() *RuleSet {
	if x != nil {
		return x.ExitRules
	}
	return nil
}

func (x *Strategy) GetTradeSize() int64 {
	if x != nil {
		return x.TradeSize
	}
	return 0
}

func (x *Strategy) GetTakeProfit() int64 {
	if x != nil {
		return x.TakeProfit
	}
	return 0
}

func (x *Strategy) GetStopLoss() int64 {
	if x != nil {
		return x.StopLoss
	}
	return 0
}

func (x *Strategy) GetStatus() Status_Name {
	if x != nil {
		return x.Status
	}
	return Status_UNKNOWN
}

func (x *Strategy) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Strategy) GetSymbol() *Symbol {
	if x != nil {
		return x.Symbol
	}
	return nil
}

func (x *Strategy) GetPositions() []*Position {
	if x != nil {
		return x.Positions
	}
	return nil
}

func (x *Strategy) GetLastEvaluated() *timestamp.Timestamp {
	if x != nil {
		return x.LastEvaluated
	}
	return nil
}

type CreateStrategyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Strategy *Strategy `protobuf:"bytes,1,opt,name=strategy,proto3" json:"strategy,omitempty"`
}

func (x *CreateStrategyRequest) Reset() {
	*x = CreateStrategyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStrategyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStrategyRequest) ProtoMessage() {}

func (x *CreateStrategyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStrategyRequest.ProtoReflect.Descriptor instead.
func (*CreateStrategyRequest) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{12}
}

func (x *CreateStrategyRequest) GetStrategy() *Strategy {
	if x != nil {
		return x.Strategy
	}
	return nil
}

type CreateStrategyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateStrategyResponse) Reset() {
	*x = CreateStrategyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStrategyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStrategyResponse) ProtoMessage() {}

func (x *CreateStrategyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStrategyResponse.ProtoReflect.Descriptor instead.
func (*CreateStrategyResponse) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{13}
}

func (x *CreateStrategyResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpdateStrategyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Strategy *Strategy `protobuf:"bytes,1,opt,name=strategy,proto3" json:"strategy,omitempty"`
}

func (x *UpdateStrategyRequest) Reset() {
	*x = UpdateStrategyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStrategyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStrategyRequest) ProtoMessage() {}

func (x *UpdateStrategyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStrategyRequest.ProtoReflect.Descriptor instead.
func (*UpdateStrategyRequest) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateStrategyRequest) GetStrategy() *Strategy {
	if x != nil {
		return x.Strategy
	}
	return nil
}

type UpdateStrategyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateStrategyResponse) Reset() {
	*x = UpdateStrategyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStrategyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStrategyResponse) ProtoMessage() {}

func (x *UpdateStrategyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStrategyResponse.ProtoReflect.Descriptor instead.
func (*UpdateStrategyResponse) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{15}
}

type DeleteStrategyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteStrategyRequest) Reset() {
	*x = DeleteStrategyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteStrategyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStrategyRequest) ProtoMessage() {}

func (x *DeleteStrategyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStrategyRequest.ProtoReflect.Descriptor instead.
func (*DeleteStrategyRequest) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteStrategyRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteStrategyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteStrategyResponse) Reset() {
	*x = DeleteStrategyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteStrategyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStrategyResponse) ProtoMessage() {}

func (x *DeleteStrategyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStrategyResponse.ProtoReflect.Descriptor instead.
func (*DeleteStrategyResponse) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{17}
}

type ListStrategiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListStrategiesRequest) Reset() {
	*x = ListStrategiesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStrategiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStrategiesRequest) ProtoMessage() {}

func (x *ListStrategiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStrategiesRequest.ProtoReflect.Descriptor instead.
func (*ListStrategiesRequest) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{18}
}

type ListStrategiesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Strategies []*Strategy `protobuf:"bytes,1,rep,name=strategies,proto3" json:"strategies,omitempty"`
}

func (x *ListStrategiesResponse) Reset() {
	*x = ListStrategiesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStrategiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStrategiesResponse) ProtoMessage() {}

func (x *ListStrategiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStrategiesResponse.ProtoReflect.Descriptor instead.
func (*ListStrategiesResponse) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{19}
}

func (x *ListStrategiesResponse) GetStrategies() []*Strategy {
	if x != nil {
		return x.Strategies
	}
	return nil
}

type EvaulateStrategyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Strategy        *Strategy      `protobuf:"bytes,1,opt,name=strategy,proto3" json:"strategy,omitempty"`
	Candlesticks    []*Candlestick `protobuf:"bytes,2,rep,name=candlesticks,proto3" json:"candlesticks,omitempty"`
	HasOpenPosition bool           `protobuf:"varint,3,opt,name=has_open_position,json=hasOpenPosition,proto3" json:"has_open_position,omitempty"`
}

func (x *EvaulateStrategyRequest) Reset() {
	*x = EvaulateStrategyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvaulateStrategyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaulateStrategyRequest) ProtoMessage() {}

func (x *EvaulateStrategyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaulateStrategyRequest.ProtoReflect.Descriptor instead.
func (*EvaulateStrategyRequest) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{20}
}

func (x *EvaulateStrategyRequest) GetStrategy() *Strategy {
	if x != nil {
		return x.Strategy
	}
	return nil
}

func (x *EvaulateStrategyRequest) GetCandlesticks() []*Candlestick {
	if x != nil {
		return x.Candlesticks
	}
	return nil
}

func (x *EvaulateStrategyRequest) GetHasOpenPosition() bool {
	if x != nil {
		return x.HasOpenPosition
	}
	return false
}

type EvaluateStrategyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action *EvaluateStrategyResponse_Action `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *EvaluateStrategyResponse) Reset() {
	*x = EvaluateStrategyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvaluateStrategyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluateStrategyResponse) ProtoMessage() {}

func (x *EvaluateStrategyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluateStrategyResponse.ProtoReflect.Descriptor instead.
func (*EvaluateStrategyResponse) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{21}
}

func (x *EvaluateStrategyResponse) GetAction() *EvaluateStrategyResponse_Action {
	if x != nil {
		return x.Action
	}
	return nil
}

type CandlestickWindow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CandlestickWindow) Reset() {
	*x = CandlestickWindow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CandlestickWindow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CandlestickWindow) ProtoMessage() {}

func (x *CandlestickWindow) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CandlestickWindow.ProtoReflect.Descriptor instead.
func (*CandlestickWindow) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{22}
}

type GetPriceHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Broker Broker_Name            `protobuf:"varint,1,opt,name=broker,proto3,enum=protos.Broker_Name" json:"broker,omitempty"`
	Symbol Symbol_Name            `protobuf:"varint,2,opt,name=symbol,proto3,enum=protos.Symbol_Name" json:"symbol,omitempty"`
	Start  *timestamp.Timestamp   `protobuf:"bytes,3,opt,name=start,proto3" json:"start,omitempty"`
	End    *timestamp.Timestamp   `protobuf:"bytes,4,opt,name=end,proto3" json:"end,omitempty"`
	Window CandlestickWindow_Name `protobuf:"varint,5,opt,name=window,proto3,enum=protos.CandlestickWindow_Name" json:"window,omitempty"`
}

func (x *GetPriceHistoryRequest) Reset() {
	*x = GetPriceHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPriceHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPriceHistoryRequest) ProtoMessage() {}

func (x *GetPriceHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPriceHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetPriceHistoryRequest) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{23}
}

func (x *GetPriceHistoryRequest) GetBroker() Broker_Name {
	if x != nil {
		return x.Broker
	}
	return Broker_UNKNOWN
}

func (x *GetPriceHistoryRequest) GetSymbol() Symbol_Name {
	if x != nil {
		return x.Symbol
	}
	return Symbol_UNKNOWN
}

func (x *GetPriceHistoryRequest) GetStart() *timestamp.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *GetPriceHistoryRequest) GetEnd() *timestamp.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *GetPriceHistoryRequest) GetWindow() CandlestickWindow_Name {
	if x != nil {
		return x.Window
	}
	return CandlestickWindow_UNKNOWN
}

type GetPriceHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Candlesticks []*Candlestick `protobuf:"bytes,1,rep,name=candlesticks,proto3" json:"candlesticks,omitempty"`
}

func (x *GetPriceHistoryResponse) Reset() {
	*x = GetPriceHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPriceHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPriceHistoryResponse) ProtoMessage() {}

func (x *GetPriceHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPriceHistoryResponse.ProtoReflect.Descriptor instead.
func (*GetPriceHistoryResponse) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{24}
}

func (x *GetPriceHistoryResponse) GetCandlesticks() []*Candlestick {
	if x != nil {
		return x.Candlesticks
	}
	return nil
}

type Tick struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp  *timestamp.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Broker     Broker_Name          `protobuf:"varint,2,opt,name=broker,proto3,enum=protos.Broker_Name" json:"broker,omitempty"`
	Symbol     Symbol_Name          `protobuf:"varint,3,opt,name=symbol,proto3,enum=protos.Symbol_Name" json:"symbol,omitempty"`
	Price      float64              `protobuf:"fixed64,4,opt,name=price,proto3" json:"price,omitempty"`
	Spread     float64              `protobuf:"fixed64,5,opt,name=spread,proto3" json:"spread,omitempty"`
	BuyVolume  float64              `protobuf:"fixed64,6,opt,name=buy_volume,json=buyVolume,proto3" json:"buy_volume,omitempty"`
	SellVolume float64              `protobuf:"fixed64,7,opt,name=sell_volume,json=sellVolume,proto3" json:"sell_volume,omitempty"`
}

func (x *Tick) Reset() {
	*x = Tick{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tick) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tick) ProtoMessage() {}

func (x *Tick) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tick.ProtoReflect.Descriptor instead.
func (*Tick) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{25}
}

func (x *Tick) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Tick) GetBroker() Broker_Name {
	if x != nil {
		return x.Broker
	}
	return Broker_UNKNOWN
}

func (x *Tick) GetSymbol() Symbol_Name {
	if x != nil {
		return x.Symbol
	}
	return Symbol_UNKNOWN
}

func (x *Tick) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Tick) GetSpread() float64 {
	if x != nil {
		return x.Spread
	}
	return 0
}

func (x *Tick) GetBuyVolume() float64 {
	if x != nil {
		return x.BuyVolume
	}
	return 0
}

func (x *Tick) GetSellVolume() float64 {
	if x != nil {
		return x.SellVolume
	}
	return 0
}

type AddTickRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tick *Tick `protobuf:"bytes,1,opt,name=tick,proto3" json:"tick,omitempty"`
}

func (x *AddTickRequest) Reset() {
	*x = AddTickRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTickRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTickRequest) ProtoMessage() {}

func (x *AddTickRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTickRequest.ProtoReflect.Descriptor instead.
func (*AddTickRequest) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{26}
}

func (x *AddTickRequest) GetTick() *Tick {
	if x != nil {
		return x.Tick
	}
	return nil
}

type AddTickResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddTickResponse) Reset() {
	*x = AddTickResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTickResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTickResponse) ProtoMessage() {}

func (x *AddTickResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTickResponse.ProtoReflect.Descriptor instead.
func (*AddTickResponse) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{27}
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string                   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name              string                   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	BrokerConnections []*User_BrokerConnection `protobuf:"bytes,3,rep,name=broker_connections,json=brokerConnections,proto3" json:"broker_connections,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{28}
}

func (x *User) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetBrokerConnections() []*User_BrokerConnection {
	if x != nil {
		return x.BrokerConnections
	}
	return nil
}

type CreateUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *CreateUserRequest) Reset() {
	*x = CreateUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserRequest) ProtoMessage() {}

func (x *CreateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserRequest.ProtoReflect.Descriptor instead.
func (*CreateUserRequest) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{29}
}

func (x *CreateUserRequest) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type CreateUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateUserResponse) Reset() {
	*x = CreateUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserResponse) ProtoMessage() {}

func (x *CreateUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserResponse.ProtoReflect.Descriptor instead.
func (*CreateUserResponse) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{30}
}

func (x *CreateUserResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpdateUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *UpdateUserRequest) Reset() {
	*x = UpdateUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserRequest) ProtoMessage() {}

func (x *UpdateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserRequest) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{31}
}

func (x *UpdateUserRequest) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type UpdateUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateUserResponse) Reset() {
	*x = UpdateUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserResponse) ProtoMessage() {}

func (x *UpdateUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserResponse) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{32}
}

type ListUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListUsersRequest) Reset() {
	*x = ListUsersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsersRequest) ProtoMessage() {}

func (x *ListUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsersRequest.ProtoReflect.Descriptor instead.
func (*ListUsersRequest) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{33}
}

type ListUsersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []*User `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *ListUsersResponse) Reset() {
	*x = ListUsersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsersResponse) ProtoMessage() {}

func (x *ListUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsersResponse.ProtoReflect.Descriptor instead.
func (*ListUsersResponse) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{34}
}

func (x *ListUsersResponse) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

type GetCurrentSessionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetCurrentSessionsRequest) Reset() {
	*x = GetCurrentSessionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCurrentSessionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentSessionsRequest) ProtoMessage() {}

func (x *GetCurrentSessionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrentSessionsRequest.ProtoReflect.Descriptor instead.
func (*GetCurrentSessionsRequest) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{35}
}

type GetCurrentSessionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId []string `protobuf:"bytes,1,rep,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *GetCurrentSessionsResponse) Reset() {
	*x = GetCurrentSessionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCurrentSessionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentSessionsResponse) ProtoMessage() {}

func (x *GetCurrentSessionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrentSessionsResponse.ProtoReflect.Descriptor instead.
func (*GetCurrentSessionsResponse) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{36}
}

func (x *GetCurrentSessionsResponse) GetSessionId() []string {
	if x != nil {
		return x.SessionId
	}
	return nil
}

type OpenSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *OpenSessionRequest) Reset() {
	*x = OpenSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenSessionRequest) ProtoMessage() {}

func (x *OpenSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenSessionRequest.ProtoReflect.Descriptor instead.
func (*OpenSessionRequest) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{37}
}

func (x *OpenSessionRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *OpenSessionRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type OpenSessionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *OpenSessionResponse) Reset() {
	*x = OpenSessionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenSessionResponse) ProtoMessage() {}

func (x *OpenSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenSessionResponse.ProtoReflect.Descriptor instead.
func (*OpenSessionResponse) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{38}
}

func (x *OpenSessionResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type OpenPositionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string         `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Direction Direction_Name `protobuf:"varint,2,opt,name=direction,proto3,enum=protos.Direction_Name" json:"direction,omitempty"`
	Symbol    Symbol_Name    `protobuf:"varint,3,opt,name=symbol,proto3,enum=protos.Symbol_Name" json:"symbol,omitempty"`
	Price     float64        `protobuf:"fixed64,4,opt,name=price,proto3" json:"price,omitempty"`
	Voliume   float64        `protobuf:"fixed64,5,opt,name=voliume,proto3" json:"voliume,omitempty"`
}

func (x *OpenPositionRequest) Reset() {
	*x = OpenPositionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenPositionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenPositionRequest) ProtoMessage() {}

func (x *OpenPositionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenPositionRequest.ProtoReflect.Descriptor instead.
func (*OpenPositionRequest) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{39}
}

func (x *OpenPositionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *OpenPositionRequest) GetDirection() Direction_Name {
	if x != nil {
		return x.Direction
	}
	return Direction_UNKNOWN
}

func (x *OpenPositionRequest) GetSymbol() Symbol_Name {
	if x != nil {
		return x.Symbol
	}
	return Symbol_UNKNOWN
}

func (x *OpenPositionRequest) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *OpenPositionRequest) GetVoliume() float64 {
	if x != nil {
		return x.Voliume
	}
	return 0
}

type OpenPositionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OpenPositionResponse) Reset() {
	*x = OpenPositionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenPositionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenPositionResponse) ProtoMessage() {}

func (x *OpenPositionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenPositionResponse.ProtoReflect.Descriptor instead.
func (*OpenPositionResponse) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{40}
}

type ClosePositionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string      `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Broker    Broker_Name `protobuf:"varint,2,opt,name=broker,proto3,enum=protos.Broker_Name" json:"broker,omitempty"`
	Id        string      `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Price     int64       `protobuf:"varint,4,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *ClosePositionRequest) Reset() {
	*x = ClosePositionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClosePositionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClosePositionRequest) ProtoMessage() {}

func (x *ClosePositionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClosePositionRequest.ProtoReflect.Descriptor instead.
func (*ClosePositionRequest) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{41}
}

func (x *ClosePositionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *ClosePositionRequest) GetBroker() Broker_Name {
	if x != nil {
		return x.Broker
	}
	return Broker_UNKNOWN
}

func (x *ClosePositionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ClosePositionRequest) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

type ClosePositionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExecutionTime  *timestamp.Timestamp `protobuf:"bytes,1,opt,name=execution_time,json=executionTime,proto3" json:"execution_time,omitempty"`
	ExecutionPrice int64                `protobuf:"varint,2,opt,name=execution_price,json=executionPrice,proto3" json:"execution_price,omitempty"`
}

func (x *ClosePositionResponse) Reset() {
	*x = ClosePositionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClosePositionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClosePositionResponse) ProtoMessage() {}

func (x *ClosePositionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClosePositionResponse.ProtoReflect.Descriptor instead.
func (*ClosePositionResponse) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{42}
}

func (x *ClosePositionResponse) GetExecutionTime() *timestamp.Timestamp {
	if x != nil {
		return x.ExecutionTime
	}
	return nil
}

func (x *ClosePositionResponse) GetExecutionPrice() int64 {
	if x != nil {
		return x.ExecutionPrice
	}
	return 0
}

type GetBrokerPriceHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string  `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Symbol    *Symbol `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
}

func (x *GetBrokerPriceHistoryRequest) Reset() {
	*x = GetBrokerPriceHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBrokerPriceHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBrokerPriceHistoryRequest) ProtoMessage() {}

func (x *GetBrokerPriceHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBrokerPriceHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetBrokerPriceHistoryRequest) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{43}
}

func (x *GetBrokerPriceHistoryRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *GetBrokerPriceHistoryRequest) GetSymbol() *Symbol {
	if x != nil {
		return x.Symbol
	}
	return nil
}

type GetBrokerPriceHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Candlesticks []*Candlestick `protobuf:"bytes,1,rep,name=candlesticks,proto3" json:"candlesticks,omitempty"`
}

func (x *GetBrokerPriceHistoryResponse) Reset() {
	*x = GetBrokerPriceHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBrokerPriceHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBrokerPriceHistoryResponse) ProtoMessage() {}

func (x *GetBrokerPriceHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBrokerPriceHistoryResponse.ProtoReflect.Descriptor instead.
func (*GetBrokerPriceHistoryResponse) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{44}
}

func (x *GetBrokerPriceHistoryResponse) GetCandlesticks() []*Candlestick {
	if x != nil {
		return x.Candlesticks
	}
	return nil
}

type SubscribeToPriceChangesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string      `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Symbol    Symbol_Name `protobuf:"varint,2,opt,name=symbol,proto3,enum=protos.Symbol_Name" json:"symbol,omitempty"`
}

func (x *SubscribeToPriceChangesRequest) Reset() {
	*x = SubscribeToPriceChangesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeToPriceChangesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeToPriceChangesRequest) ProtoMessage() {}

func (x *SubscribeToPriceChangesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeToPriceChangesRequest.ProtoReflect.Descriptor instead.
func (*SubscribeToPriceChangesRequest) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{45}
}

func (x *SubscribeToPriceChangesRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *SubscribeToPriceChangesRequest) GetSymbol() Symbol_Name {
	if x != nil {
		return x.Symbol
	}
	return Symbol_UNKNOWN
}

type SubscribeToPriceChangesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SubscribeToPriceChangesResponse) Reset() {
	*x = SubscribeToPriceChangesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeToPriceChangesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeToPriceChangesResponse) ProtoMessage() {}

func (x *SubscribeToPriceChangesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeToPriceChangesResponse.ProtoReflect.Descriptor instead.
func (*SubscribeToPriceChangesResponse) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{46}
}

type RegisterBrokerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Broker  Broker_Name `protobuf:"varint,1,opt,name=broker,proto3,enum=protos.Broker_Name" json:"broker,omitempty"`
	Address string      `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *RegisterBrokerRequest) Reset() {
	*x = RegisterBrokerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterBrokerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterBrokerRequest) ProtoMessage() {}

func (x *RegisterBrokerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterBrokerRequest.ProtoReflect.Descriptor instead.
func (*RegisterBrokerRequest) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{47}
}

func (x *RegisterBrokerRequest) GetBroker() Broker_Name {
	if x != nil {
		return x.Broker
	}
	return Broker_UNKNOWN
}

func (x *RegisterBrokerRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type RegisterBrokerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RegisterBrokerResponse) Reset() {
	*x = RegisterBrokerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterBrokerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterBrokerResponse) ProtoMessage() {}

func (x *RegisterBrokerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterBrokerResponse.ProtoReflect.Descriptor instead.
func (*RegisterBrokerResponse) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{48}
}

type Rule_Indicator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Condition:
	//	*Rule_Indicator_SimpleTakeProfit_
	//	*Rule_Indicator_PivotTakeProfit_
	//	*Rule_Indicator_SimpleStopLoss_
	//	*Rule_Indicator_PivotStopLoss_
	//	*Rule_Indicator_SimpleMovingAverage_
	//	*Rule_Indicator_RelativeStrengthIndex_
	//	*Rule_Indicator_Macd
	//	*Rule_Indicator_BollingerBands_
	Condition isRule_Indicator_Condition `protobuf_oneof:"condition"`
}

func (x *Rule_Indicator) Reset() {
	*x = Rule_Indicator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rule_Indicator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rule_Indicator) ProtoMessage() {}

func (x *Rule_Indicator) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rule_Indicator.ProtoReflect.Descriptor instead.
func (*Rule_Indicator) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{5, 0}
}

func (m *Rule_Indicator) GetCondition() isRule_Indicator_Condition {
	if m != nil {
		return m.Condition
	}
	return nil
}

func (x *Rule_Indicator) GetSimpleTakeProfit() *Rule_Indicator_SimpleTakeProfit {
	if x, ok := x.GetCondition().(*Rule_Indicator_SimpleTakeProfit_); ok {
		return x.SimpleTakeProfit
	}
	return nil
}

func (x *Rule_Indicator) GetPivotTakeProfit() *Rule_Indicator_PivotTakeProfit {
	if x, ok := x.GetCondition().(*Rule_Indicator_PivotTakeProfit_); ok {
		return x.PivotTakeProfit
	}
	return nil
}

func (x *Rule_Indicator) GetSimpleStopLoss() *Rule_Indicator_SimpleStopLoss {
	if x, ok := x.GetCondition().(*Rule_Indicator_SimpleStopLoss_); ok {
		return x.SimpleStopLoss
	}
	return nil
}

func (x *Rule_Indicator) GetPivotStopLoss() *Rule_Indicator_PivotStopLoss {
	if x, ok := x.GetCondition().(*Rule_Indicator_PivotStopLoss_); ok {
		return x.PivotStopLoss
	}
	return nil
}

func (x *Rule_Indicator) GetSimpleMovingAverage() *Rule_Indicator_SimpleMovingAverage {
	if x, ok := x.GetCondition().(*Rule_Indicator_SimpleMovingAverage_); ok {
		return x.SimpleMovingAverage
	}
	return nil
}

func (x *Rule_Indicator) GetRelativeStrengthIndex() *Rule_Indicator_RelativeStrengthIndex {
	if x, ok := x.GetCondition().(*Rule_Indicator_RelativeStrengthIndex_); ok {
		return x.RelativeStrengthIndex
	}
	return nil
}

func (x *Rule_Indicator) GetMacd() *Rule_Indicator_MACD {
	if x, ok := x.GetCondition().(*Rule_Indicator_Macd); ok {
		return x.Macd
	}
	return nil
}

func (x *Rule_Indicator) GetBollingerBands() *Rule_Indicator_BollingerBands {
	if x, ok := x.GetCondition().(*Rule_Indicator_BollingerBands_); ok {
		return x.BollingerBands
	}
	return nil
}

type isRule_Indicator_Condition interface {
	isRule_Indicator_Condition()
}

type Rule_Indicator_SimpleTakeProfit_ struct {
	SimpleTakeProfit *Rule_Indicator_SimpleTakeProfit `protobuf:"bytes,100,opt,name=simple_take_profit,json=simpleTakeProfit,proto3,oneof"`
}

type Rule_Indicator_PivotTakeProfit_ struct {
	PivotTakeProfit *Rule_Indicator_PivotTakeProfit `protobuf:"bytes,101,opt,name=pivot_take_profit,json=pivotTakeProfit,proto3,oneof"`
}

type Rule_Indicator_SimpleStopLoss_ struct {
	SimpleStopLoss *Rule_Indicator_SimpleStopLoss `protobuf:"bytes,200,opt,name=simple_stop_loss,json=simpleStopLoss,proto3,oneof"`
}

type Rule_Indicator_PivotStopLoss_ struct {
	PivotStopLoss *Rule_Indicator_PivotStopLoss `protobuf:"bytes,201,opt,name=pivot_stop_loss,json=pivotStopLoss,proto3,oneof"`
}

type Rule_Indicator_SimpleMovingAverage_ struct {
	SimpleMovingAverage *Rule_Indicator_SimpleMovingAverage `protobuf:"bytes,300,opt,name=simple_moving_average,json=simpleMovingAverage,proto3,oneof"`
}

type Rule_Indicator_RelativeStrengthIndex_ struct {
	RelativeStrengthIndex *Rule_Indicator_RelativeStrengthIndex `protobuf:"bytes,301,opt,name=relative_strength_index,json=relativeStrengthIndex,proto3,oneof"`
}

type Rule_Indicator_Macd struct {
	Macd *Rule_Indicator_MACD `protobuf:"bytes,302,opt,name=macd,proto3,oneof"`
}

type Rule_Indicator_BollingerBands_ struct {
	BollingerBands *Rule_Indicator_BollingerBands `protobuf:"bytes,303,opt,name=bollinger_bands,json=bollingerBands,proto3,oneof"`
}

func (*Rule_Indicator_SimpleTakeProfit_) isRule_Indicator_Condition() {}

func (*Rule_Indicator_PivotTakeProfit_) isRule_Indicator_Condition() {}

func (*Rule_Indicator_SimpleStopLoss_) isRule_Indicator_Condition() {}

func (*Rule_Indicator_PivotStopLoss_) isRule_Indicator_Condition() {}

func (*Rule_Indicator_SimpleMovingAverage_) isRule_Indicator_Condition() {}

func (*Rule_Indicator_RelativeStrengthIndex_) isRule_Indicator_Condition() {}

func (*Rule_Indicator_Macd) isRule_Indicator_Condition() {}

func (*Rule_Indicator_BollingerBands_) isRule_Indicator_Condition() {}

type Rule_Indicator_SimpleMovingAverage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Condition Rule_Indicator_SimpleMovingAverage_Condition `protobuf:"varint,1,opt,name=condition,proto3,enum=protos.Rule_Indicator_SimpleMovingAverage_Condition" json:"condition,omitempty"`
	Period    int64                                        `protobuf:"varint,2,opt,name=period,proto3" json:"period,omitempty"`
}

func (x *Rule_Indicator_SimpleMovingAverage) Reset() {
	*x = Rule_Indicator_SimpleMovingAverage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rule_Indicator_SimpleMovingAverage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rule_Indicator_SimpleMovingAverage) ProtoMessage() {}

func (x *Rule_Indicator_SimpleMovingAverage) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rule_Indicator_SimpleMovingAverage.ProtoReflect.Descriptor instead.
func (*Rule_Indicator_SimpleMovingAverage) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{5, 0, 0}
}

func (x *Rule_Indicator_SimpleMovingAverage) GetCondition() Rule_Indicator_SimpleMovingAverage_Condition {
	if x != nil {
		return x.Condition
	}
	return Rule_Indicator_SimpleMovingAverage_UNKNOWN
}

func (x *Rule_Indicator_SimpleMovingAverage) GetPeriod() int64 {
	if x != nil {
		return x.Period
	}
	return 0
}

type Rule_Indicator_RelativeStrengthIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Condition  Rule_Indicator_RelativeStrengthIndex_Condition `protobuf:"varint,1,opt,name=condition,proto3,enum=protos.Rule_Indicator_RelativeStrengthIndex_Condition" json:"condition,omitempty"`
	Period     int64                                          `protobuf:"varint,2,opt,name=period,proto3" json:"period,omitempty"`
	OverBought int64                                          `protobuf:"varint,3,opt,name=over_bought,json=overBought,proto3" json:"over_bought,omitempty"`
	OverSold   int64                                          `protobuf:"varint,4,opt,name=over_sold,json=overSold,proto3" json:"over_sold,omitempty"`
}

func (x *Rule_Indicator_RelativeStrengthIndex) Reset() {
	*x = Rule_Indicator_RelativeStrengthIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rule_Indicator_RelativeStrengthIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rule_Indicator_RelativeStrengthIndex) ProtoMessage() {}

func (x *Rule_Indicator_RelativeStrengthIndex) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rule_Indicator_RelativeStrengthIndex.ProtoReflect.Descriptor instead.
func (*Rule_Indicator_RelativeStrengthIndex) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{5, 0, 1}
}

func (x *Rule_Indicator_RelativeStrengthIndex) GetCondition() Rule_Indicator_RelativeStrengthIndex_Condition {
	if x != nil {
		return x.Condition
	}
	return Rule_Indicator_RelativeStrengthIndex_UNKNOWN
}

func (x *Rule_Indicator_RelativeStrengthIndex) GetPeriod() int64 {
	if x != nil {
		return x.Period
	}
	return 0
}

func (x *Rule_Indicator_RelativeStrengthIndex) GetOverBought() int64 {
	if x != nil {
		return x.OverBought
	}
	return 0
}

func (x *Rule_Indicator_RelativeStrengthIndex) GetOverSold() int64 {
	if x != nil {
		return x.OverSold
	}
	return 0
}

type Rule_Indicator_MACD struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Condition Rule_Indicator_MACD_Condition `protobuf:"varint,1,opt,name=condition,proto3,enum=protos.Rule_Indicator_MACD_Condition" json:"condition,omitempty"`
	ShortTerm int64                         `protobuf:"varint,2,opt,name=short_term,json=shortTerm,proto3" json:"short_term,omitempty"`
	LongTerm  int64                         `protobuf:"varint,3,opt,name=long_term,json=longTerm,proto3" json:"long_term,omitempty"`
	Length    int64                         `protobuf:"varint,4,opt,name=length,proto3" json:"length,omitempty"`
}

func (x *Rule_Indicator_MACD) Reset() {
	*x = Rule_Indicator_MACD{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rule_Indicator_MACD) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rule_Indicator_MACD) ProtoMessage() {}

func (x *Rule_Indicator_MACD) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rule_Indicator_MACD.ProtoReflect.Descriptor instead.
func (*Rule_Indicator_MACD) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{5, 0, 2}
}

func (x *Rule_Indicator_MACD) GetCondition() Rule_Indicator_MACD_Condition {
	if x != nil {
		return x.Condition
	}
	return Rule_Indicator_MACD_UNKNOWN
}

func (x *Rule_Indicator_MACD) GetShortTerm() int64 {
	if x != nil {
		return x.ShortTerm
	}
	return 0
}

func (x *Rule_Indicator_MACD) GetLongTerm() int64 {
	if x != nil {
		return x.LongTerm
	}
	return 0
}

func (x *Rule_Indicator_MACD) GetLength() int64 {
	if x != nil {
		return x.Length
	}
	return 0
}

type Rule_Indicator_BollingerBands struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Condition Rule_Indicator_BollingerBands_Condition `protobuf:"varint,1,opt,name=condition,proto3,enum=protos.Rule_Indicator_BollingerBands_Condition" json:"condition,omitempty"`
	Period    int64                                   `protobuf:"varint,2,opt,name=period,proto3" json:"period,omitempty"`
	Deviation float64                                 `protobuf:"fixed64,3,opt,name=deviation,proto3" json:"deviation,omitempty"`
}

func (x *Rule_Indicator_BollingerBands) Reset() {
	*x = Rule_Indicator_BollingerBands{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rule_Indicator_BollingerBands) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rule_Indicator_BollingerBands) ProtoMessage() {}

func (x *Rule_Indicator_BollingerBands) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rule_Indicator_BollingerBands.ProtoReflect.Descriptor instead.
func (*Rule_Indicator_BollingerBands) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{5, 0, 3}
}

func (x *Rule_Indicator_BollingerBands) GetCondition() Rule_Indicator_BollingerBands_Condition {
	if x != nil {
		return x.Condition
	}
	return Rule_Indicator_BollingerBands_UNKNOWN
}

func (x *Rule_Indicator_BollingerBands) GetPeriod() int64 {
	if x != nil {
		return x.Period
	}
	return 0
}

func (x *Rule_Indicator_BollingerBands) GetDeviation() float64 {
	if x != nil {
		return x.Deviation
	}
	return 0
}

type Rule_Indicator_SimpleTakeProfit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pips int64 `protobuf:"varint,1,opt,name=pips,proto3" json:"pips,omitempty"`
}

func (x *Rule_Indicator_SimpleTakeProfit) Reset() {
	*x = Rule_Indicator_SimpleTakeProfit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rule_Indicator_SimpleTakeProfit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rule_Indicator_SimpleTakeProfit) ProtoMessage() {}

func (x *Rule_Indicator_SimpleTakeProfit) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rule_Indicator_SimpleTakeProfit.ProtoReflect.Descriptor instead.
func (*Rule_Indicator_SimpleTakeProfit) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{5, 0, 4}
}

func (x *Rule_Indicator_SimpleTakeProfit) GetPips() int64 {
	if x != nil {
		return x.Pips
	}
	return 0
}

type Rule_Indicator_PivotTakeProfit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Rule_Indicator_PivotTakeProfit) Reset() {
	*x = Rule_Indicator_PivotTakeProfit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rule_Indicator_PivotTakeProfit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rule_Indicator_PivotTakeProfit) ProtoMessage() {}

func (x *Rule_Indicator_PivotTakeProfit) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rule_Indicator_PivotTakeProfit.ProtoReflect.Descriptor instead.
func (*Rule_Indicator_PivotTakeProfit) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{5, 0, 5}
}

type Rule_Indicator_SimpleStopLoss struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pips int64 `protobuf:"varint,1,opt,name=pips,proto3" json:"pips,omitempty"`
}

func (x *Rule_Indicator_SimpleStopLoss) Reset() {
	*x = Rule_Indicator_SimpleStopLoss{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rule_Indicator_SimpleStopLoss) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rule_Indicator_SimpleStopLoss) ProtoMessage() {}

func (x *Rule_Indicator_SimpleStopLoss) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rule_Indicator_SimpleStopLoss.ProtoReflect.Descriptor instead.
func (*Rule_Indicator_SimpleStopLoss) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{5, 0, 6}
}

func (x *Rule_Indicator_SimpleStopLoss) GetPips() int64 {
	if x != nil {
		return x.Pips
	}
	return 0
}

type Rule_Indicator_PivotStopLoss struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Rule_Indicator_PivotStopLoss) Reset() {
	*x = Rule_Indicator_PivotStopLoss{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rule_Indicator_PivotStopLoss) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rule_Indicator_PivotStopLoss) ProtoMessage() {}

func (x *Rule_Indicator_PivotStopLoss) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rule_Indicator_PivotStopLoss.ProtoReflect.Descriptor instead.
func (*Rule_Indicator_PivotStopLoss) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{5, 0, 7}
}

type EvaluateStrategyResponse_Action struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Action:
	//	*EvaluateStrategyResponse_Action_OpenPosition_
	//	*EvaluateStrategyResponse_Action_ClosePosition_
	Action isEvaluateStrategyResponse_Action_Action `protobuf_oneof:"action"`
}

func (x *EvaluateStrategyResponse_Action) Reset() {
	*x = EvaluateStrategyResponse_Action{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvaluateStrategyResponse_Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluateStrategyResponse_Action) ProtoMessage() {}

func (x *EvaluateStrategyResponse_Action) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluateStrategyResponse_Action.ProtoReflect.Descriptor instead.
func (*EvaluateStrategyResponse_Action) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{21, 0}
}

func (m *EvaluateStrategyResponse_Action) GetAction() isEvaluateStrategyResponse_Action_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (x *EvaluateStrategyResponse_Action) GetOpenPosition() *EvaluateStrategyResponse_Action_OpenPosition {
	if x, ok := x.GetAction().(*EvaluateStrategyResponse_Action_OpenPosition_); ok {
		return x.OpenPosition
	}
	return nil
}

func (x *EvaluateStrategyResponse_Action) GetClosePosition() *EvaluateStrategyResponse_Action_ClosePosition {
	if x, ok := x.GetAction().(*EvaluateStrategyResponse_Action_ClosePosition_); ok {
		return x.ClosePosition
	}
	return nil
}

type isEvaluateStrategyResponse_Action_Action interface {
	isEvaluateStrategyResponse_Action_Action()
}

type EvaluateStrategyResponse_Action_OpenPosition_ struct {
	OpenPosition *EvaluateStrategyResponse_Action_OpenPosition `protobuf:"bytes,1,opt,name=open_position,json=openPosition,proto3,oneof"`
}

type EvaluateStrategyResponse_Action_ClosePosition_ struct {
	ClosePosition *EvaluateStrategyResponse_Action_ClosePosition `protobuf:"bytes,2,opt,name=close_position,json=closePosition,proto3,oneof"`
}

func (*EvaluateStrategyResponse_Action_OpenPosition_) isEvaluateStrategyResponse_Action_Action() {}

func (*EvaluateStrategyResponse_Action_ClosePosition_) isEvaluateStrategyResponse_Action_Action() {}

type EvaluateStrategyResponse_Action_OpenPosition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Direction Direction_Name `protobuf:"varint,1,opt,name=direction,proto3,enum=protos.Direction_Name" json:"direction,omitempty"`
	Price     int64          `protobuf:"varint,2,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *EvaluateStrategyResponse_Action_OpenPosition) Reset() {
	*x = EvaluateStrategyResponse_Action_OpenPosition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvaluateStrategyResponse_Action_OpenPosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluateStrategyResponse_Action_OpenPosition) ProtoMessage() {}

func (x *EvaluateStrategyResponse_Action_OpenPosition) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluateStrategyResponse_Action_OpenPosition.ProtoReflect.Descriptor instead.
func (*EvaluateStrategyResponse_Action_OpenPosition) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{21, 0, 0}
}

func (x *EvaluateStrategyResponse_Action_OpenPosition) GetDirection() Direction_Name {
	if x != nil {
		return x.Direction
	}
	return Direction_UNKNOWN
}

func (x *EvaluateStrategyResponse_Action_OpenPosition) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

type EvaluateStrategyResponse_Action_ClosePosition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Price int64 `protobuf:"varint,1,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *EvaluateStrategyResponse_Action_ClosePosition) Reset() {
	*x = EvaluateStrategyResponse_Action_ClosePosition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvaluateStrategyResponse_Action_ClosePosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluateStrategyResponse_Action_ClosePosition) ProtoMessage() {}

func (x *EvaluateStrategyResponse_Action_ClosePosition) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluateStrategyResponse_Action_ClosePosition.ProtoReflect.Descriptor instead.
func (*EvaluateStrategyResponse_Action_ClosePosition) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{21, 0, 1}
}

func (x *EvaluateStrategyResponse_Action_ClosePosition) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

type User_BrokerConnection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Broker    Broker_Name `protobuf:"varint,1,opt,name=broker,proto3,enum=protos.Broker_Name" json:"broker,omitempty"`
	Username  string      `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`                    // todo (obviously) make this a lot more secure
	Password  string      `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`                    // todo will this work with oauth or is a oneof better
	SessionId string      `protobuf:"bytes,4,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"` // todo this shouldnt be next to the username and password thats dumb as fuck
}

func (x *User_BrokerConnection) Reset() {
	*x = User_BrokerConnection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User_BrokerConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User_BrokerConnection) ProtoMessage() {}

func (x *User_BrokerConnection) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User_BrokerConnection.ProtoReflect.Descriptor instead.
func (*User_BrokerConnection) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{28, 0}
}

func (x *User_BrokerConnection) GetBroker() Broker_Name {
	if x != nil {
		return x.Broker
	}
	return Broker_UNKNOWN
}

func (x *User_BrokerConnection) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *User_BrokerConnection) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *User_BrokerConnection) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

var File_protos_proto protoreflect.FileDescriptor

var file_protos_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x82, 0x01, 0x0a, 0x0b, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x06, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x06, 0x62, 0x72, 0x6f,
	0x6b, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x71, 0x0a, 0x06,
	0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x42, 0x72,
	0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x3e, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x58, 0x54, 0x42, 0x5f, 0x44, 0x45, 0x4d, 0x4f,
	0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x58, 0x54, 0x42, 0x5f, 0x52, 0x45, 0x54, 0x41, 0x49, 0x4c,
	0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x58, 0x54, 0x42, 0x5f, 0x50, 0x52, 0x4f, 0x10, 0x03, 0x22,
	0xdd, 0x02, 0x0a, 0x0b, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x12,
	0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2b, 0x0a, 0x06, 0x62, 0x72, 0x6f,
	0x6b, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x06,
	0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x06, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x6e, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x69, 0x67, 0x68, 0x5f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x68, 0x69, 0x67, 0x68, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x77, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x6f, 0x77, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x62, 0x75, 0x79, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x09, 0x62, 0x75, 0x79, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x65, 0x6c, 0x6c, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0a, 0x73, 0x65, 0x6c, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x22,
	0x61, 0x0a, 0x09, 0x50, 0x72, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x28, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x08, 0x0a,
	0x04, 0x4f, 0x50, 0x45, 0x4e, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x43, 0x4c, 0x4f, 0x53, 0x45,
	0x10, 0x02, 0x22, 0x63, 0x0a, 0x08, 0x4f, 0x70, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x29,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x4e,
	0x61, 0x6d, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x2c, 0x0a, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0a,
	0x0a, 0x06, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x45,
	0x56, 0x45, 0x52, 0x53, 0x45, 0x10, 0x02, 0x22, 0x94, 0x11, 0x0a, 0x04, 0x52, 0x75, 0x6c, 0x65,
	0x12, 0x34, 0x0a, 0x09, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x52, 0x75, 0x6c,
	0x65, 0x2e, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x09, 0x69, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x35, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x09, 0x70, 0x72, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x32, 0x0a,
	0x09, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x2d, 0x0a, 0x12, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x6e, 0x61, 0x6e, 0x6f,
	0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x70,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x4e, 0x61, 0x6e, 0x6f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73,
	0x1a, 0xbb, 0x0f, 0x0a, 0x09, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x57,
	0x0a, 0x12, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x74, 0x61, 0x6b, 0x65, 0x5f, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x2e, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x54, 0x61, 0x6b, 0x65, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x74, 0x48, 0x00, 0x52, 0x10, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x54, 0x61, 0x6b,
	0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x12, 0x54, 0x0a, 0x11, 0x70, 0x69, 0x76, 0x6f, 0x74,
	0x5f, 0x74, 0x61, 0x6b, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x18, 0x65, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x52, 0x75, 0x6c, 0x65,
	0x2e, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x50, 0x69, 0x76, 0x6f, 0x74,
	0x54, 0x61, 0x6b, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x70, 0x69,
	0x76, 0x6f, 0x74, 0x54, 0x61, 0x6b, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x12, 0x52, 0x0a,
	0x10, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x6c, 0x6f, 0x73,
	0x73, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x2e, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72,
	0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x70, 0x4c, 0x6f, 0x73, 0x73, 0x48,
	0x00, 0x52, 0x0e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x70, 0x4c, 0x6f, 0x73,
	0x73, 0x12, 0x4f, 0x0a, 0x0f, 0x70, 0x69, 0x76, 0x6f, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x5f,
	0x6c, 0x6f, 0x73, 0x73, 0x18, 0xc9, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x2e, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x2e, 0x50, 0x69, 0x76, 0x6f, 0x74, 0x53, 0x74, 0x6f, 0x70, 0x4c, 0x6f, 0x73,
	0x73, 0x48, 0x00, 0x52, 0x0d, 0x70, 0x69, 0x76, 0x6f, 0x74, 0x53, 0x74, 0x6f, 0x70, 0x4c, 0x6f,
	0x73, 0x73, 0x12, 0x61, 0x0a, 0x15, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x6d, 0x6f, 0x76,
	0x69, 0x6e, 0x67, 0x5f, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x18, 0xac, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x52, 0x75, 0x6c, 0x65,
	0x2e, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c,
	0x65, 0x4d, 0x6f, 0x76, 0x69, 0x6e, 0x67, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x48, 0x00,
	0x52, 0x13, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x6e, 0x67, 0x41, 0x76,
	0x65, 0x72, 0x61, 0x67, 0x65, 0x12, 0x67, 0x0a, 0x17, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0xad, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2e, 0x52, 0x75, 0x6c, 0x65, 0x2e, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x53, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x48, 0x00, 0x52, 0x15, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x53, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x32,
	0x0a, 0x04, 0x6d, 0x61, 0x63, 0x64, 0x18, 0xae, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x2e, 0x49, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x4d, 0x41, 0x43, 0x44, 0x48, 0x00, 0x52, 0x04, 0x6d, 0x61,
	0x63, 0x64, 0x12, 0x51, 0x0a, 0x0f, 0x62, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x5f,
	0x62, 0x61, 0x6e, 0x64, 0x73, 0x18, 0xaf, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x2e, 0x49, 0x6e, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x6f, 0x72, 0x2e, 0x42, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x42, 0x61,
	0x6e, 0x64, 0x73, 0x48, 0x00, 0x52, 0x0e, 0x62, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x65, 0x72,
	0x42, 0x61, 0x6e, 0x64, 0x73, 0x1a, 0xc9, 0x01, 0x0a, 0x13, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x4d, 0x6f, 0x76, 0x69, 0x6e, 0x67, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x12, 0x52, 0x0a,
	0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x34, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x2e, 0x49,
	0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4d,
	0x6f, 0x76, 0x69, 0x6e, 0x67, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x22, 0x46, 0x0a, 0x09, 0x43, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x41, 0x42, 0x4f, 0x56, 0x45, 0x5f, 0x53, 0x49, 0x47,
	0x4e, 0x41, 0x4c, 0x5f, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x42, 0x45,
	0x4c, 0x4f, 0x57, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x4c, 0x49, 0x4e, 0x45, 0x10,
	0x02, 0x1a, 0xca, 0x02, 0x0a, 0x15, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x53, 0x74,
	0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x54, 0x0a, 0x09, 0x63,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x36,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x2e, 0x49, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x53,
	0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x43, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x76, 0x65,
	0x72, 0x5f, 0x62, 0x6f, 0x75, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x6f, 0x76, 0x65, 0x72, 0x42, 0x6f, 0x75, 0x67, 0x68, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x76,
	0x65, 0x72, 0x5f, 0x73, 0x6f, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6f,
	0x76, 0x65, 0x72, 0x53, 0x6f, 0x6c, 0x64, 0x22, 0x84, 0x01, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x41, 0x42, 0x4f, 0x56, 0x45, 0x5f, 0x4f, 0x56, 0x45, 0x52,
	0x5f, 0x42, 0x4f, 0x55, 0x47, 0x48, 0x54, 0x5f, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x1a,
	0x0a, 0x16, 0x42, 0x45, 0x4c, 0x4f, 0x57, 0x5f, 0x4f, 0x56, 0x45, 0x52, 0x5f, 0x42, 0x4f, 0x55,
	0x47, 0x48, 0x54, 0x5f, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x41, 0x42,
	0x4f, 0x56, 0x45, 0x5f, 0x4f, 0x56, 0x45, 0x52, 0x5f, 0x53, 0x4f, 0x4c, 0x44, 0x5f, 0x4c, 0x49,
	0x4e, 0x45, 0x10, 0x03, 0x12, 0x18, 0x0a, 0x14, 0x42, 0x45, 0x4c, 0x4f, 0x57, 0x5f, 0x4f, 0x56,
	0x45, 0x52, 0x5f, 0x53, 0x4f, 0x4c, 0x44, 0x5f, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x04, 0x1a, 0xf1,
	0x01, 0x0a, 0x04, 0x4d, 0x41, 0x43, 0x44, 0x12, 0x43, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x2e, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x4d, 0x41, 0x43, 0x44, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x6c,
	0x6f, 0x6e, 0x67, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x6c, 0x6f, 0x6e, 0x67, 0x54, 0x65, 0x72, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67,
	0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x22, 0x50, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0b, 0x0a,
	0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x49,
	0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x41, 0x42, 0x4f, 0x56, 0x45, 0x5f,
	0x4d, 0x41, 0x43, 0x44, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c,
	0x5f, 0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x42, 0x45, 0x4c, 0x4f, 0x57, 0x5f, 0x4d, 0x41, 0x43, 0x44,
	0x10, 0x02, 0x1a, 0xc8, 0x02, 0x0a, 0x0e, 0x42, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x65, 0x72,
	0x42, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x4d, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x2e, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72,
	0x2e, 0x42, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x64, 0x73, 0x2e,
	0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x64, 0x65, 0x76, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x09, 0x64, 0x65, 0x76, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xb0, 0x01, 0x0a, 0x09, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x52, 0x49, 0x43, 0x45, 0x5f, 0x41,
	0x42, 0x4f, 0x56, 0x45, 0x5f, 0x55, 0x50, 0x50, 0x45, 0x52, 0x5f, 0x42, 0x41, 0x4e, 0x44, 0x10,
	0x01, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x52, 0x49, 0x43, 0x45, 0x5f, 0x42, 0x45, 0x4c, 0x4f, 0x57,
	0x5f, 0x55, 0x50, 0x50, 0x45, 0x52, 0x5f, 0x42, 0x41, 0x4e, 0x44, 0x10, 0x02, 0x12, 0x1a, 0x0a,
	0x16, 0x50, 0x52, 0x49, 0x43, 0x45, 0x5f, 0x41, 0x42, 0x4f, 0x56, 0x45, 0x5f, 0x4c, 0x4f, 0x57,
	0x45, 0x52, 0x5f, 0x42, 0x41, 0x4e, 0x44, 0x10, 0x03, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x52, 0x49,
	0x43, 0x45, 0x5f, 0x42, 0x45, 0x4c, 0x4f, 0x57, 0x5f, 0x4c, 0x4f, 0x57, 0x45, 0x52, 0x5f, 0x42,
	0x41, 0x4e, 0x44, 0x10, 0x04, 0x12, 0x12, 0x0a, 0x0e, 0x50, 0x52, 0x49, 0x43, 0x45, 0x5f, 0x41,
	0x42, 0x4f, 0x56, 0x45, 0x5f, 0x4d, 0x41, 0x10, 0x05, 0x12, 0x12, 0x0a, 0x0e, 0x50, 0x52, 0x49,
	0x43, 0x45, 0x5f, 0x42, 0x45, 0x4c, 0x4f, 0x57, 0x5f, 0x4d, 0x41, 0x10, 0x06, 0x1a, 0x26, 0x0a,
	0x10, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x54, 0x61, 0x6b, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x69, 0x70, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x70, 0x69, 0x70, 0x73, 0x1a, 0x11, 0x0a, 0x0f, 0x50, 0x69, 0x76, 0x6f, 0x74, 0x54, 0x61,
	0x6b, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x1a, 0x56, 0x0a, 0x0e, 0x53, 0x69, 0x6d, 0x70,
	0x6c, 0x65, 0x53, 0x74, 0x6f, 0x70, 0x4c, 0x6f, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x69,
	0x70, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x69, 0x70, 0x73, 0x22, 0x30,
	0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x49, 0x58, 0x45, 0x44, 0x10, 0x01, 0x12, 0x10,
	0x0a, 0x0c, 0x42, 0x41, 0x52, 0x5f, 0x54, 0x52, 0x41, 0x49, 0x4c, 0x49, 0x4e, 0x47, 0x10, 0x02,
	0x1a, 0x0f, 0x0a, 0x0d, 0x50, 0x69, 0x76, 0x6f, 0x74, 0x53, 0x74, 0x6f, 0x70, 0x4c, 0x6f, 0x73,
	0x73, 0x42, 0x0b, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5f,
	0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x27, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x2c, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45,
	0x44, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x41, 0x55, 0x53, 0x45, 0x44, 0x10, 0x02, 0x22,
	0x5f, 0x0a, 0x09, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x26, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x07, 0x0a,
	0x03, 0x42, 0x55, 0x59, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x45, 0x4c, 0x4c, 0x10, 0x02,
	0x22, 0x84, 0x02, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a,
	0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x6e, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0a,
	0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x6c,
	0x6f, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xc5, 0x02, 0x0a, 0x06, 0x53, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x12, 0x27, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x62,
	0x72, 0x6f, 0x6b, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x4e, 0x61, 0x6d, 0x65,
	0x52, 0x06, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x22, 0xe4, 0x01, 0x0a, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x07, 0x41, 0x55, 0x44, 0x5f, 0x55, 0x53, 0x44, 0x10, 0x64, 0x12, 0x0b, 0x0a, 0x07, 0x45,
	0x55, 0x52, 0x5f, 0x55, 0x53, 0x44, 0x10, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x55, 0x52, 0x5f,
	0x43, 0x48, 0x46, 0x10, 0x66, 0x12, 0x0b, 0x0a, 0x07, 0x47, 0x42, 0x50, 0x5f, 0x4a, 0x50, 0x59,
	0x10, 0x67, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x53, 0x44, 0x5f, 0x43, 0x48, 0x46, 0x10, 0x68, 0x12,
	0x0b, 0x0a, 0x07, 0x55, 0x53, 0x44, 0x5f, 0x47, 0x42, 0x50, 0x10, 0x69, 0x12, 0x0b, 0x0a, 0x07,
	0x55, 0x53, 0x44, 0x5f, 0x43, 0x41, 0x44, 0x10, 0x6a, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x53, 0x44,
	0x5f, 0x4a, 0x50, 0x59, 0x10, 0x6b, 0x12, 0x0c, 0x0a, 0x07, 0x42, 0x49, 0x54, 0x43, 0x4f, 0x49,
	0x4e, 0x10, 0xc8, 0x01, 0x12, 0x0d, 0x0a, 0x08, 0x4c, 0x49, 0x54, 0x45, 0x43, 0x4f, 0x49, 0x4e,
	0x10, 0xc9, 0x01, 0x12, 0x0d, 0x0a, 0x08, 0x45, 0x54, 0x48, 0x45, 0x52, 0x45, 0x55, 0x4d, 0x10,
	0xca, 0x01, 0x12, 0x0a, 0x0a, 0x05, 0x55, 0x53, 0x5f, 0x33, 0x30, 0x10, 0xac, 0x02, 0x12, 0x0b,
	0x0a, 0x06, 0x55, 0x4b, 0x5f, 0x31, 0x30, 0x30, 0x10, 0xad, 0x02, 0x12, 0x0a, 0x0a, 0x05, 0x44,
	0x45, 0x5f, 0x33, 0x30, 0x10, 0xae, 0x02, 0x12, 0x0b, 0x0a, 0x06, 0x53, 0x49, 0x4c, 0x56, 0x45,
	0x52, 0x10, 0x90, 0x03, 0x12, 0x09, 0x0a, 0x04, 0x47, 0x4f, 0x4c, 0x44, 0x10, 0x91, 0x03, 0x22,
	0x2d, 0x0a, 0x07, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x12, 0x22, 0x0a, 0x05, 0x72, 0x75,
	0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x22, 0xb5,
	0x03, 0x0a, 0x08, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x30, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x52, 0x75,
	0x6c, 0x65, 0x53, 0x65, 0x74, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x75, 0x6c, 0x65,
	0x73, 0x12, 0x2e, 0x0a, 0x0a, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x52,
	0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x52, 0x09, 0x65, 0x78, 0x69, 0x74, 0x52, 0x75, 0x6c, 0x65,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x6b, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x61, 0x6b, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x6c, 0x6f, 0x73, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x74, 0x6f, 0x70, 0x4c, 0x6f, 0x73, 0x73, 0x12, 0x2b,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x4e,
	0x61, 0x6d, 0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x06, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x52, 0x06, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x12, 0x2e, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x41, 0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x65, 0x76, 0x61, 0x6c,
	0x75, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x45, 0x76, 0x61,
	0x6c, 0x75, 0x61, 0x74, 0x65, 0x64, 0x22, 0x45, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2c, 0x0a, 0x08, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53, 0x74, 0x72, 0x61, 0x74,
	0x65, 0x67, 0x79, 0x52, 0x08, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x22, 0x28, 0x0a,
	0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x45, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2c, 0x0a, 0x08, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x67, 0x79, 0x52, 0x08, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x22, 0x18,
	0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x18, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74,
	0x65, 0x67, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x0a, 0x15, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x4a, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x67, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30,
	0x0a, 0x0a, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x67, 0x79, 0x52, 0x0a, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x69, 0x65, 0x73,
	0x22, 0xac, 0x01, 0x0a, 0x17, 0x45, 0x76, 0x61, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x08,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79,
	0x52, 0x08, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x37, 0x0a, 0x0c, 0x63, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x73, 0x74, 0x69, 0x63, 0x6b, 0x52, 0x0c, 0x63, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x74, 0x69,
	0x63, 0x6b, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x68, 0x61, 0x73, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f,
	0x68, 0x61, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0xb0, 0x03, 0x0a, 0x18, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x67, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x53, 0x74,
	0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xd2, 0x02,
	0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5b, 0x0a, 0x0d, 0x6f, 0x70, 0x65, 0x6e,
	0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x34, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x6e, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5e, 0x0a, 0x0e, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0d, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x5a, 0x0a, 0x0c, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4e, 0x61, 0x6d, 0x65,
	0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x1a, 0x25, 0x0a, 0x0d, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xc2, 0x01, 0x0a, 0x11, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x74, 0x69,
	0x63, 0x6b, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x22, 0xac, 0x01, 0x0a, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0e,
	0x0a, 0x0a, 0x4f, 0x4e, 0x45, 0x5f, 0x4d, 0x49, 0x4e, 0x55, 0x54, 0x45, 0x10, 0x3c, 0x12, 0x10,
	0x0a, 0x0b, 0x46, 0x49, 0x56, 0x45, 0x5f, 0x4d, 0x49, 0x4e, 0x55, 0x54, 0x45, 0x10, 0xac, 0x02,
	0x12, 0x0f, 0x0a, 0x0a, 0x54, 0x45, 0x4e, 0x5f, 0x4d, 0x49, 0x4e, 0x55, 0x54, 0x45, 0x10, 0xd8,
	0x04, 0x12, 0x12, 0x0a, 0x0d, 0x54, 0x48, 0x49, 0x52, 0x54, 0x59, 0x5f, 0x4d, 0x49, 0x4e, 0x55,
	0x54, 0x45, 0x10, 0x88, 0x0e, 0x12, 0x0d, 0x0a, 0x08, 0x4f, 0x4e, 0x45, 0x5f, 0x48, 0x4f, 0x55,
	0x52, 0x10, 0x90, 0x1c, 0x12, 0x0f, 0x0a, 0x0a, 0x54, 0x48, 0x52, 0x45, 0x45, 0x5f, 0x48, 0x4f,
	0x55, 0x52, 0x10, 0xb0, 0x54, 0x12, 0x0e, 0x0a, 0x08, 0x53, 0x49, 0x58, 0x5f, 0x48, 0x4f, 0x55,
	0x52, 0x10, 0xe0, 0xa8, 0x01, 0x12, 0x11, 0x0a, 0x0b, 0x54, 0x57, 0x45, 0x4c, 0x56, 0x45, 0x5f,
	0x48, 0x4f, 0x55, 0x52, 0x10, 0xc0, 0xd1, 0x02, 0x12, 0x0d, 0x0a, 0x07, 0x4f, 0x4e, 0x45, 0x5f,
	0x44, 0x41, 0x59, 0x10, 0x80, 0xa3, 0x05, 0x22, 0x8a, 0x02, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2b, 0x0a, 0x06, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x42, 0x72, 0x6f, 0x6b,
	0x65, 0x72, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x06, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x12,
	0x2b, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x2e,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x30, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x2c,
	0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x36, 0x0a, 0x06,
	0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x63,
	0x6b, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x06, 0x77, 0x69,
	0x6e, 0x64, 0x6f, 0x77, 0x22, 0x52, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x37, 0x0a, 0x0c, 0x63, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x43,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x52, 0x0c, 0x63, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x73, 0x22, 0x88, 0x02, 0x0a, 0x04, 0x54, 0x69, 0x63,
	0x6b, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2b, 0x0a, 0x06, 0x62,
	0x72, 0x6f, 0x6b, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x4e, 0x61, 0x6d, 0x65,
	0x52, 0x06, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x06, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x70, 0x72, 0x65, 0x61, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x73, 0x70, 0x72,
	0x65, 0x61, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x75, 0x79, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x62, 0x75, 0x79, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6c, 0x6c, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x73, 0x65, 0x6c, 0x6c, 0x56, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x22, 0x32, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x04, 0x74, 0x69, 0x63, 0x6b, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x69, 0x63,
	0x6b, 0x52, 0x04, 0x74, 0x69, 0x63, 0x6b, 0x22, 0x11, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x54, 0x69,
	0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x91, 0x02, 0x0a, 0x04, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x4c, 0x0a, 0x12, 0x62, 0x72, 0x6f, 0x6b, 0x65,
	0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x2e, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x11, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x96, 0x01, 0x0a, 0x10, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x06, 0x62, 0x72,
	0x6f, 0x6b, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x52,
	0x06, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x35,
	0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x24, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x35, 0x0a, 0x11, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x20, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x22, 0x14, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x12, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x37, 0x0a, 0x11,
	0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x22, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x22, 0x1b, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x3b, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22,
	0x4c, 0x0a, 0x12, 0x4f, 0x70, 0x65, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x34, 0x0a,
	0x13, 0x4f, 0x70, 0x65, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x22, 0xc7, 0x01, 0x0a, 0x13, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x09, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2b, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x6f, 0x6c, 0x69, 0x75, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x76, 0x6f, 0x6c, 0x69, 0x75, 0x6d, 0x65, 0x22, 0x16, 0x0a,
	0x14, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x88, 0x01, 0x0a, 0x14, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2b, 0x0a,
	0x06, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x06, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x22, 0x83, 0x01, 0x0a, 0x15, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0e, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x27, 0x0a,
	0x0f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0x65, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x42, 0x72, 0x6f,
	0x6b, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x22, 0x58, 0x0a,
	0x1d, 0x47, 0x65, 0x74, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37,
	0x0a, 0x0c, 0x63, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x43, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x52, 0x0c, 0x63, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x73, 0x22, 0x6c, 0x0a, 0x1e, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x54, 0x6f, 0x50, 0x72, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x06, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x22, 0x21, 0x0a, 0x1f, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x54, 0x6f, 0x50, 0x72, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5e, 0x0a, 0x15, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2b, 0x0a, 0x06, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x42, 0x72, 0x6f, 0x6b, 0x65,
	0x72, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x06, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x18, 0x0a, 0x16, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x32, 0xad, 0x05, 0x0a, 0x0b, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x4f, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x67, 0x79, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74,
	0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x67, 0x69, 0x65, 0x73, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x69, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x69, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x07, 0x41, 0x64,
	0x64, 0x54, 0x69, 0x63, 0x6b, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x41,
	0x64, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0a, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x40, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x18, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x32, 0x62, 0x0a, 0x11, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x45, 0x76,
	0x61, 0x6c, 0x75, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x4d, 0x0a, 0x08, 0x45, 0x76, 0x61, 0x6c, 0x75,
	0x61, 0x74, 0x65, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x45, 0x76, 0x61,
	0x75, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x45, 0x76,
	0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xf0, 0x04, 0x0a, 0x0d, 0x42, 0x72, 0x6f, 0x6b, 0x65,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5b, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x21,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x6e, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x4f, 0x70,
	0x65, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a,
	0x0c, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0d, 0x43, 0x6c, 0x6f, 0x73,
	0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x42, 0x72, 0x6f,
	0x6b, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12,
	0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x72, 0x6f, 0x6b,
	0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a, 0x17,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x6f, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x6f, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x54, 0x6f, 0x50, 0x72, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0e, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x42, 0x72, 0x6f, 0x6b,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x42, 0x72, 0x6f, 0x6b, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x1f, 0x5a, 0x1d, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x75, 0x63, 0x63, 0x2f, 0x6b, 0x77, 0xc9,
	0x92, 0x6e, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_protos_proto_rawDescOnce sync.Once
	file_protos_proto_rawDescData = file_protos_proto_rawDesc
)

func file_protos_proto_rawDescGZIP() []byte {
	file_protos_proto_rawDescOnce.Do(func() {
		file_protos_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_proto_rawDescData)
	})
	return file_protos_proto_rawDescData
}

var file_protos_proto_enumTypes = make([]protoimpl.EnumInfo, 12)
var file_protos_proto_msgTypes = make([]protoimpl.MessageInfo, 62)
var file_protos_proto_goTypes = []interface{}{
	(Broker_Name)(0),    // 0: protos.Broker.Name
	(PriceType_Name)(0), // 1: protos.PriceType.Name
	(OpenType_Name)(0),  // 2: protos.OpenType.Name
	(Rule_Indicator_SimpleMovingAverage_Condition)(0),     // 3: protos.Rule.Indicator.SimpleMovingAverage.Condition
	(Rule_Indicator_RelativeStrengthIndex_Condition)(0),   // 4: protos.Rule.Indicator.RelativeStrengthIndex.Condition
	(Rule_Indicator_MACD_Condition)(0),                    // 5: protos.Rule.Indicator.MACD.Condition
	(Rule_Indicator_BollingerBands_Condition)(0),          // 6: protos.Rule.Indicator.BollingerBands.Condition
	(Rule_Indicator_SimpleStopLoss_Type)(0),               // 7: protos.Rule.Indicator.SimpleStopLoss.Type
	(Status_Name)(0),                                      // 8: protos.Status.Name
	(Direction_Name)(0),                                   // 9: protos.Direction.Name
	(Symbol_Name)(0),                                      // 10: protos.Symbol.Name
	(CandlestickWindow_Name)(0),                           // 11: protos.CandlestickWindow.Name
	(*SessionInfo)(nil),                                   // 12: protos.SessionInfo
	(*Broker)(nil),                                        // 13: protos.Broker
	(*Candlestick)(nil),                                   // 14: protos.Candlestick
	(*PriceType)(nil),                                     // 15: protos.PriceType
	(*OpenType)(nil),                                      // 16: protos.OpenType
	(*Rule)(nil),                                          // 17: protos.Rule
	(*Status)(nil),                                        // 18: protos.Status
	(*Direction)(nil),                                     // 19: protos.Direction
	(*Position)(nil),                                      // 20: protos.Position
	(*Symbol)(nil),                                        // 21: protos.Symbol
	(*RuleSet)(nil),                                       // 22: protos.RuleSet
	(*Strategy)(nil),                                      // 23: protos.Strategy
	(*CreateStrategyRequest)(nil),                         // 24: protos.CreateStrategyRequest
	(*CreateStrategyResponse)(nil),                        // 25: protos.CreateStrategyResponse
	(*UpdateStrategyRequest)(nil),                         // 26: protos.UpdateStrategyRequest
	(*UpdateStrategyResponse)(nil),                        // 27: protos.UpdateStrategyResponse
	(*DeleteStrategyRequest)(nil),                         // 28: protos.DeleteStrategyRequest
	(*DeleteStrategyResponse)(nil),                        // 29: protos.DeleteStrategyResponse
	(*ListStrategiesRequest)(nil),                         // 30: protos.ListStrategiesRequest
	(*ListStrategiesResponse)(nil),                        // 31: protos.ListStrategiesResponse
	(*EvaulateStrategyRequest)(nil),                       // 32: protos.EvaulateStrategyRequest
	(*EvaluateStrategyResponse)(nil),                      // 33: protos.EvaluateStrategyResponse
	(*CandlestickWindow)(nil),                             // 34: protos.CandlestickWindow
	(*GetPriceHistoryRequest)(nil),                        // 35: protos.GetPriceHistoryRequest
	(*GetPriceHistoryResponse)(nil),                       // 36: protos.GetPriceHistoryResponse
	(*Tick)(nil),                                          // 37: protos.Tick
	(*AddTickRequest)(nil),                                // 38: protos.AddTickRequest
	(*AddTickResponse)(nil),                               // 39: protos.AddTickResponse
	(*User)(nil),                                          // 40: protos.User
	(*CreateUserRequest)(nil),                             // 41: protos.CreateUserRequest
	(*CreateUserResponse)(nil),                            // 42: protos.CreateUserResponse
	(*UpdateUserRequest)(nil),                             // 43: protos.UpdateUserRequest
	(*UpdateUserResponse)(nil),                            // 44: protos.UpdateUserResponse
	(*ListUsersRequest)(nil),                              // 45: protos.ListUsersRequest
	(*ListUsersResponse)(nil),                             // 46: protos.ListUsersResponse
	(*GetCurrentSessionsRequest)(nil),                     // 47: protos.GetCurrentSessionsRequest
	(*GetCurrentSessionsResponse)(nil),                    // 48: protos.GetCurrentSessionsResponse
	(*OpenSessionRequest)(nil),                            // 49: protos.OpenSessionRequest
	(*OpenSessionResponse)(nil),                           // 50: protos.OpenSessionResponse
	(*OpenPositionRequest)(nil),                           // 51: protos.OpenPositionRequest
	(*OpenPositionResponse)(nil),                          // 52: protos.OpenPositionResponse
	(*ClosePositionRequest)(nil),                          // 53: protos.ClosePositionRequest
	(*ClosePositionResponse)(nil),                         // 54: protos.ClosePositionResponse
	(*GetBrokerPriceHistoryRequest)(nil),                  // 55: protos.GetBrokerPriceHistoryRequest
	(*GetBrokerPriceHistoryResponse)(nil),                 // 56: protos.GetBrokerPriceHistoryResponse
	(*SubscribeToPriceChangesRequest)(nil),                // 57: protos.SubscribeToPriceChangesRequest
	(*SubscribeToPriceChangesResponse)(nil),               // 58: protos.SubscribeToPriceChangesResponse
	(*RegisterBrokerRequest)(nil),                         // 59: protos.RegisterBrokerRequest
	(*RegisterBrokerResponse)(nil),                        // 60: protos.RegisterBrokerResponse
	(*Rule_Indicator)(nil),                                // 61: protos.Rule.Indicator
	(*Rule_Indicator_SimpleMovingAverage)(nil),            // 62: protos.Rule.Indicator.SimpleMovingAverage
	(*Rule_Indicator_RelativeStrengthIndex)(nil),          // 63: protos.Rule.Indicator.RelativeStrengthIndex
	(*Rule_Indicator_MACD)(nil),                           // 64: protos.Rule.Indicator.MACD
	(*Rule_Indicator_BollingerBands)(nil),                 // 65: protos.Rule.Indicator.BollingerBands
	(*Rule_Indicator_SimpleTakeProfit)(nil),               // 66: protos.Rule.Indicator.SimpleTakeProfit
	(*Rule_Indicator_PivotTakeProfit)(nil),                // 67: protos.Rule.Indicator.PivotTakeProfit
	(*Rule_Indicator_SimpleStopLoss)(nil),                 // 68: protos.Rule.Indicator.SimpleStopLoss
	(*Rule_Indicator_PivotStopLoss)(nil),                  // 69: protos.Rule.Indicator.PivotStopLoss
	(*EvaluateStrategyResponse_Action)(nil),               // 70: protos.EvaluateStrategyResponse.Action
	(*EvaluateStrategyResponse_Action_OpenPosition)(nil),  // 71: protos.EvaluateStrategyResponse.Action.OpenPosition
	(*EvaluateStrategyResponse_Action_ClosePosition)(nil), // 72: protos.EvaluateStrategyResponse.Action.ClosePosition
	(*User_BrokerConnection)(nil),                         // 73: protos.User.BrokerConnection
	(*timestamp.Timestamp)(nil),                           // 74: google.protobuf.Timestamp
}
var file_protos_proto_depIdxs = []int32{
	0,  // 0: protos.SessionInfo.broker:type_name -> protos.Broker.Name
	0,  // 1: protos.Broker.name:type_name -> protos.Broker.Name
	74, // 2: protos.Candlestick.timestamp:type_name -> google.protobuf.Timestamp
	0,  // 3: protos.Candlestick.broker:type_name -> protos.Broker.Name
	10, // 4: protos.Candlestick.symbol:type_name -> protos.Symbol.Name
	1,  // 5: protos.PriceType.name:type_name -> protos.PriceType.Name
	2,  // 6: protos.OpenType.name:type_name -> protos.OpenType.Name
	61, // 7: protos.Rule.indicator:type_name -> protos.Rule.Indicator
	1,  // 8: protos.Rule.price_type:type_name -> protos.PriceType.Name
	2,  // 9: protos.Rule.open_type:type_name -> protos.OpenType.Name
	8,  // 10: protos.Status.name:type_name -> protos.Status.Name
	9,  // 11: protos.Direction.name:type_name -> protos.Direction.Name
	9,  // 12: protos.Position.direction:type_name -> protos.Direction.Name
	74, // 13: protos.Position.open_time:type_name -> google.protobuf.Timestamp
	74, // 14: protos.Position.close_time:type_name -> google.protobuf.Timestamp
	10, // 15: protos.Symbol.name:type_name -> protos.Symbol.Name
	0,  // 16: protos.Symbol.broker:type_name -> protos.Broker.Name
	17, // 17: protos.RuleSet.rules:type_name -> protos.Rule
	22, // 18: protos.Strategy.entry_rules:type_name -> protos.RuleSet
	22, // 19: protos.Strategy.exit_rules:type_name -> protos.RuleSet
	8,  // 20: protos.Strategy.status:type_name -> protos.Status.Name
	21, // 21: protos.Strategy.symbol:type_name -> protos.Symbol
	20, // 22: protos.Strategy.positions:type_name -> protos.Position
	74, // 23: protos.Strategy.last_evaluated:type_name -> google.protobuf.Timestamp
	23, // 24: protos.CreateStrategyRequest.strategy:type_name -> protos.Strategy
	23, // 25: protos.UpdateStrategyRequest.strategy:type_name -> protos.Strategy
	23, // 26: protos.ListStrategiesResponse.strategies:type_name -> protos.Strategy
	23, // 27: protos.EvaulateStrategyRequest.strategy:type_name -> protos.Strategy
	14, // 28: protos.EvaulateStrategyRequest.candlesticks:type_name -> protos.Candlestick
	70, // 29: protos.EvaluateStrategyResponse.action:type_name -> protos.EvaluateStrategyResponse.Action
	0,  // 30: protos.GetPriceHistoryRequest.broker:type_name -> protos.Broker.Name
	10, // 31: protos.GetPriceHistoryRequest.symbol:type_name -> protos.Symbol.Name
	74, // 32: protos.GetPriceHistoryRequest.start:type_name -> google.protobuf.Timestamp
	74, // 33: protos.GetPriceHistoryRequest.end:type_name -> google.protobuf.Timestamp
	11, // 34: protos.GetPriceHistoryRequest.window:type_name -> protos.CandlestickWindow.Name
	14, // 35: protos.GetPriceHistoryResponse.candlesticks:type_name -> protos.Candlestick
	74, // 36: protos.Tick.timestamp:type_name -> google.protobuf.Timestamp
	0,  // 37: protos.Tick.broker:type_name -> protos.Broker.Name
	10, // 38: protos.Tick.symbol:type_name -> protos.Symbol.Name
	37, // 39: protos.AddTickRequest.tick:type_name -> protos.Tick
	73, // 40: protos.User.broker_connections:type_name -> protos.User.BrokerConnection
	40, // 41: protos.CreateUserRequest.user:type_name -> protos.User
	40, // 42: protos.UpdateUserRequest.user:type_name -> protos.User
	40, // 43: protos.ListUsersResponse.users:type_name -> protos.User
	9,  // 44: protos.OpenPositionRequest.direction:type_name -> protos.Direction.Name
	10, // 45: protos.OpenPositionRequest.symbol:type_name -> protos.Symbol.Name
	0,  // 46: protos.ClosePositionRequest.broker:type_name -> protos.Broker.Name
	74, // 47: protos.ClosePositionResponse.execution_time:type_name -> google.protobuf.Timestamp
	21, // 48: protos.GetBrokerPriceHistoryRequest.symbol:type_name -> protos.Symbol
	14, // 49: protos.GetBrokerPriceHistoryResponse.candlesticks:type_name -> protos.Candlestick
	10, // 50: protos.SubscribeToPriceChangesRequest.symbol:type_name -> protos.Symbol.Name
	0,  // 51: protos.RegisterBrokerRequest.broker:type_name -> protos.Broker.Name
	66, // 52: protos.Rule.Indicator.simple_take_profit:type_name -> protos.Rule.Indicator.SimpleTakeProfit
	67, // 53: protos.Rule.Indicator.pivot_take_profit:type_name -> protos.Rule.Indicator.PivotTakeProfit
	68, // 54: protos.Rule.Indicator.simple_stop_loss:type_name -> protos.Rule.Indicator.SimpleStopLoss
	69, // 55: protos.Rule.Indicator.pivot_stop_loss:type_name -> protos.Rule.Indicator.PivotStopLoss
	62, // 56: protos.Rule.Indicator.simple_moving_average:type_name -> protos.Rule.Indicator.SimpleMovingAverage
	63, // 57: protos.Rule.Indicator.relative_strength_index:type_name -> protos.Rule.Indicator.RelativeStrengthIndex
	64, // 58: protos.Rule.Indicator.macd:type_name -> protos.Rule.Indicator.MACD
	65, // 59: protos.Rule.Indicator.bollinger_bands:type_name -> protos.Rule.Indicator.BollingerBands
	3,  // 60: protos.Rule.Indicator.SimpleMovingAverage.condition:type_name -> protos.Rule.Indicator.SimpleMovingAverage.Condition
	4,  // 61: protos.Rule.Indicator.RelativeStrengthIndex.condition:type_name -> protos.Rule.Indicator.RelativeStrengthIndex.Condition
	5,  // 62: protos.Rule.Indicator.MACD.condition:type_name -> protos.Rule.Indicator.MACD.Condition
	6,  // 63: protos.Rule.Indicator.BollingerBands.condition:type_name -> protos.Rule.Indicator.BollingerBands.Condition
	71, // 64: protos.EvaluateStrategyResponse.Action.open_position:type_name -> protos.EvaluateStrategyResponse.Action.OpenPosition
	72, // 65: protos.EvaluateStrategyResponse.Action.close_position:type_name -> protos.EvaluateStrategyResponse.Action.ClosePosition
	9,  // 66: protos.EvaluateStrategyResponse.Action.OpenPosition.direction:type_name -> protos.Direction.Name
	0,  // 67: protos.User.BrokerConnection.broker:type_name -> protos.Broker.Name
	24, // 68: protos.DataService.CreateStrategy:input_type -> protos.CreateStrategyRequest
	26, // 69: protos.DataService.UpdateStrategy:input_type -> protos.UpdateStrategyRequest
	28, // 70: protos.DataService.DeleteStrategy:input_type -> protos.DeleteStrategyRequest
	30, // 71: protos.DataService.ListStrategies:input_type -> protos.ListStrategiesRequest
	35, // 72: protos.DataService.GetPriceHistory:input_type -> protos.GetPriceHistoryRequest
	38, // 73: protos.DataService.AddTick:input_type -> protos.AddTickRequest
	41, // 74: protos.DataService.CreateUser:input_type -> protos.CreateUserRequest
	43, // 75: protos.DataService.UpdateUser:input_type -> protos.UpdateUserRequest
	45, // 76: protos.DataService.ListUsers:input_type -> protos.ListUsersRequest
	32, // 77: protos.StrategyEvaluator.Evaluate:input_type -> protos.EvaulateStrategyRequest
	47, // 78: protos.BrokerService.GetCurrentSessions:input_type -> protos.GetCurrentSessionsRequest
	49, // 79: protos.BrokerService.OpenSession:input_type -> protos.OpenSessionRequest
	51, // 80: protos.BrokerService.OpenPosition:input_type -> protos.OpenPositionRequest
	53, // 81: protos.BrokerService.ClosePosition:input_type -> protos.ClosePositionRequest
	55, // 82: protos.BrokerService.GetBrokerPriceHistory:input_type -> protos.GetBrokerPriceHistoryRequest
	57, // 83: protos.BrokerService.SubscribeToPriceChanges:input_type -> protos.SubscribeToPriceChangesRequest
	59, // 84: protos.BrokerService.RegisterBroker:input_type -> protos.RegisterBrokerRequest
	25, // 85: protos.DataService.CreateStrategy:output_type -> protos.CreateStrategyResponse
	27, // 86: protos.DataService.UpdateStrategy:output_type -> protos.UpdateStrategyResponse
	29, // 87: protos.DataService.DeleteStrategy:output_type -> protos.DeleteStrategyResponse
	31, // 88: protos.DataService.ListStrategies:output_type -> protos.ListStrategiesResponse
	36, // 89: protos.DataService.GetPriceHistory:output_type -> protos.GetPriceHistoryResponse
	39, // 90: protos.DataService.AddTick:output_type -> protos.AddTickResponse
	42, // 91: protos.DataService.CreateUser:output_type -> protos.CreateUserResponse
	44, // 92: protos.DataService.UpdateUser:output_type -> protos.UpdateUserResponse
	46, // 93: protos.DataService.ListUsers:output_type -> protos.ListUsersResponse
	33, // 94: protos.StrategyEvaluator.Evaluate:output_type -> protos.EvaluateStrategyResponse
	48, // 95: protos.BrokerService.GetCurrentSessions:output_type -> protos.GetCurrentSessionsResponse
	50, // 96: protos.BrokerService.OpenSession:output_type -> protos.OpenSessionResponse
	52, // 97: protos.BrokerService.OpenPosition:output_type -> protos.OpenPositionResponse
	54, // 98: protos.BrokerService.ClosePosition:output_type -> protos.ClosePositionResponse
	56, // 99: protos.BrokerService.GetBrokerPriceHistory:output_type -> protos.GetBrokerPriceHistoryResponse
	58, // 100: protos.BrokerService.SubscribeToPriceChanges:output_type -> protos.SubscribeToPriceChangesResponse
	60, // 101: protos.BrokerService.RegisterBroker:output_type -> protos.RegisterBrokerResponse
	85, // [85:102] is the sub-list for method output_type
	68, // [68:85] is the sub-list for method input_type
	68, // [68:68] is the sub-list for extension type_name
	68, // [68:68] is the sub-list for extension extendee
	0,  // [0:68] is the sub-list for field type_name
}

func init() { file_protos_proto_init() }
func file_protos_proto_init() {
	if File_protos_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protos_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Broker); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Candlestick); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PriceType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Direction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Position); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Symbol); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuleSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Strategy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStrategyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStrategyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStrategyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStrategyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteStrategyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteStrategyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStrategiesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStrategiesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvaulateStrategyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvaluateStrategyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CandlestickWindow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPriceHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPriceHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tick); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddTickRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddTickResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUsersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUsersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCurrentSessionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCurrentSessionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenSessionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenPositionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenPositionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClosePositionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClosePositionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBrokerPriceHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBrokerPriceHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeToPriceChangesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeToPriceChangesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterBrokerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterBrokerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rule_Indicator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rule_Indicator_SimpleMovingAverage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rule_Indicator_RelativeStrengthIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rule_Indicator_MACD); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rule_Indicator_BollingerBands); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rule_Indicator_SimpleTakeProfit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rule_Indicator_PivotTakeProfit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rule_Indicator_SimpleStopLoss); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rule_Indicator_PivotStopLoss); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvaluateStrategyResponse_Action); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvaluateStrategyResponse_Action_OpenPosition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvaluateStrategyResponse_Action_ClosePosition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User_BrokerConnection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_protos_proto_msgTypes[49].OneofWrappers = []interface{}{
		(*Rule_Indicator_SimpleTakeProfit_)(nil),
		(*Rule_Indicator_PivotTakeProfit_)(nil),
		(*Rule_Indicator_SimpleStopLoss_)(nil),
		(*Rule_Indicator_PivotStopLoss_)(nil),
		(*Rule_Indicator_SimpleMovingAverage_)(nil),
		(*Rule_Indicator_RelativeStrengthIndex_)(nil),
		(*Rule_Indicator_Macd)(nil),
		(*Rule_Indicator_BollingerBands_)(nil),
	}
	file_protos_proto_msgTypes[58].OneofWrappers = []interface{}{
		(*EvaluateStrategyResponse_Action_OpenPosition_)(nil),
		(*EvaluateStrategyResponse_Action_ClosePosition_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_proto_rawDesc,
			NumEnums:      12,
			NumMessages:   62,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_protos_proto_goTypes,
		DependencyIndexes: file_protos_proto_depIdxs,
		EnumInfos:         file_protos_proto_enumTypes,
		MessageInfos:      file_protos_proto_msgTypes,
	}.Build()
	File_protos_proto = out.File
	file_protos_proto_rawDesc = nil
	file_protos_proto_goTypes = nil
	file_protos_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DataServiceClient is the client API for DataService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DataServiceClient interface {
	CreateStrategy(ctx context.Context, in *CreateStrategyRequest, opts ...grpc.CallOption) (*CreateStrategyResponse, error)
	UpdateStrategy(ctx context.Context, in *UpdateStrategyRequest, opts ...grpc.CallOption) (*UpdateStrategyResponse, error)
	DeleteStrategy(ctx context.Context, in *DeleteStrategyRequest, opts ...grpc.CallOption) (*DeleteStrategyResponse, error)
	ListStrategies(ctx context.Context, in *ListStrategiesRequest, opts ...grpc.CallOption) (*ListStrategiesResponse, error)
	GetPriceHistory(ctx context.Context, in *GetPriceHistoryRequest, opts ...grpc.CallOption) (*GetPriceHistoryResponse, error)
	AddTick(ctx context.Context, in *AddTickRequest, opts ...grpc.CallOption) (*AddTickResponse, error)
	CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*CreateUserResponse, error)
	UpdateUser(ctx context.Context, in *UpdateUserRequest, opts ...grpc.CallOption) (*UpdateUserResponse, error)
	ListUsers(ctx context.Context, in *ListUsersRequest, opts ...grpc.CallOption) (*ListUsersResponse, error)
}

type dataServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDataServiceClient(cc grpc.ClientConnInterface) DataServiceClient {
	return &dataServiceClient{cc}
}

func (c *dataServiceClient) CreateStrategy(ctx context.Context, in *CreateStrategyRequest, opts ...grpc.CallOption) (*CreateStrategyResponse, error) {
	out := new(CreateStrategyResponse)
	err := c.cc.Invoke(ctx, "/protos.DataService/CreateStrategy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataServiceClient) UpdateStrategy(ctx context.Context, in *UpdateStrategyRequest, opts ...grpc.CallOption) (*UpdateStrategyResponse, error) {
	out := new(UpdateStrategyResponse)
	err := c.cc.Invoke(ctx, "/protos.DataService/UpdateStrategy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataServiceClient) DeleteStrategy(ctx context.Context, in *DeleteStrategyRequest, opts ...grpc.CallOption) (*DeleteStrategyResponse, error) {
	out := new(DeleteStrategyResponse)
	err := c.cc.Invoke(ctx, "/protos.DataService/DeleteStrategy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataServiceClient) ListStrategies(ctx context.Context, in *ListStrategiesRequest, opts ...grpc.CallOption) (*ListStrategiesResponse, error) {
	out := new(ListStrategiesResponse)
	err := c.cc.Invoke(ctx, "/protos.DataService/ListStrategies", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataServiceClient) GetPriceHistory(ctx context.Context, in *GetPriceHistoryRequest, opts ...grpc.CallOption) (*GetPriceHistoryResponse, error) {
	out := new(GetPriceHistoryResponse)
	err := c.cc.Invoke(ctx, "/protos.DataService/GetPriceHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataServiceClient) AddTick(ctx context.Context, in *AddTickRequest, opts ...grpc.CallOption) (*AddTickResponse, error) {
	out := new(AddTickResponse)
	err := c.cc.Invoke(ctx, "/protos.DataService/AddTick", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataServiceClient) CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*CreateUserResponse, error) {
	out := new(CreateUserResponse)
	err := c.cc.Invoke(ctx, "/protos.DataService/CreateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataServiceClient) UpdateUser(ctx context.Context, in *UpdateUserRequest, opts ...grpc.CallOption) (*UpdateUserResponse, error) {
	out := new(UpdateUserResponse)
	err := c.cc.Invoke(ctx, "/protos.DataService/UpdateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataServiceClient) ListUsers(ctx context.Context, in *ListUsersRequest, opts ...grpc.CallOption) (*ListUsersResponse, error) {
	out := new(ListUsersResponse)
	err := c.cc.Invoke(ctx, "/protos.DataService/ListUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DataServiceServer is the server API for DataService service.
type DataServiceServer interface {
	CreateStrategy(context.Context, *CreateStrategyRequest) (*CreateStrategyResponse, error)
	UpdateStrategy(context.Context, *UpdateStrategyRequest) (*UpdateStrategyResponse, error)
	DeleteStrategy(context.Context, *DeleteStrategyRequest) (*DeleteStrategyResponse, error)
	ListStrategies(context.Context, *ListStrategiesRequest) (*ListStrategiesResponse, error)
	GetPriceHistory(context.Context, *GetPriceHistoryRequest) (*GetPriceHistoryResponse, error)
	AddTick(context.Context, *AddTickRequest) (*AddTickResponse, error)
	CreateUser(context.Context, *CreateUserRequest) (*CreateUserResponse, error)
	UpdateUser(context.Context, *UpdateUserRequest) (*UpdateUserResponse, error)
	ListUsers(context.Context, *ListUsersRequest) (*ListUsersResponse, error)
}

// UnimplementedDataServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDataServiceServer struct {
}

func (*UnimplementedDataServiceServer) CreateStrategy(context.Context, *CreateStrategyRequest) (*CreateStrategyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateStrategy not implemented")
}
func (*UnimplementedDataServiceServer) UpdateStrategy(context.Context, *UpdateStrategyRequest) (*UpdateStrategyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateStrategy not implemented")
}
func (*UnimplementedDataServiceServer) DeleteStrategy(context.Context, *DeleteStrategyRequest) (*DeleteStrategyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteStrategy not implemented")
}
func (*UnimplementedDataServiceServer) ListStrategies(context.Context, *ListStrategiesRequest) (*ListStrategiesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListStrategies not implemented")
}
func (*UnimplementedDataServiceServer) GetPriceHistory(context.Context, *GetPriceHistoryRequest) (*GetPriceHistoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPriceHistory not implemented")
}
func (*UnimplementedDataServiceServer) AddTick(context.Context, *AddTickRequest) (*AddTickResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddTick not implemented")
}
func (*UnimplementedDataServiceServer) CreateUser(context.Context, *CreateUserRequest) (*CreateUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUser not implemented")
}
func (*UnimplementedDataServiceServer) UpdateUser(context.Context, *UpdateUserRequest) (*UpdateUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUser not implemented")
}
func (*UnimplementedDataServiceServer) ListUsers(context.Context, *ListUsersRequest) (*ListUsersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListUsers not implemented")
}

func RegisterDataServiceServer(s *grpc.Server, srv DataServiceServer) {
	s.RegisterService(&_DataService_serviceDesc, srv)
}

func _DataService_CreateStrategy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateStrategyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServiceServer).CreateStrategy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.DataService/CreateStrategy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServiceServer).CreateStrategy(ctx, req.(*CreateStrategyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataService_UpdateStrategy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateStrategyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServiceServer).UpdateStrategy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.DataService/UpdateStrategy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServiceServer).UpdateStrategy(ctx, req.(*UpdateStrategyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataService_DeleteStrategy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteStrategyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServiceServer).DeleteStrategy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.DataService/DeleteStrategy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServiceServer).DeleteStrategy(ctx, req.(*DeleteStrategyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataService_ListStrategies_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListStrategiesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServiceServer).ListStrategies(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.DataService/ListStrategies",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServiceServer).ListStrategies(ctx, req.(*ListStrategiesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataService_GetPriceHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPriceHistoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServiceServer).GetPriceHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.DataService/GetPriceHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServiceServer).GetPriceHistory(ctx, req.(*GetPriceHistoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataService_AddTick_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddTickRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServiceServer).AddTick(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.DataService/AddTick",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServiceServer).AddTick(ctx, req.(*AddTickRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataService_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServiceServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.DataService/CreateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServiceServer).CreateUser(ctx, req.(*CreateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataService_UpdateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServiceServer).UpdateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.DataService/UpdateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServiceServer).UpdateUser(ctx, req.(*UpdateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataService_ListUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListUsersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServiceServer).ListUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.DataService/ListUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServiceServer).ListUsers(ctx, req.(*ListUsersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DataService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.DataService",
	HandlerType: (*DataServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateStrategy",
			Handler:    _DataService_CreateStrategy_Handler,
		},
		{
			MethodName: "UpdateStrategy",
			Handler:    _DataService_UpdateStrategy_Handler,
		},
		{
			MethodName: "DeleteStrategy",
			Handler:    _DataService_DeleteStrategy_Handler,
		},
		{
			MethodName: "ListStrategies",
			Handler:    _DataService_ListStrategies_Handler,
		},
		{
			MethodName: "GetPriceHistory",
			Handler:    _DataService_GetPriceHistory_Handler,
		},
		{
			MethodName: "AddTick",
			Handler:    _DataService_AddTick_Handler,
		},
		{
			MethodName: "CreateUser",
			Handler:    _DataService_CreateUser_Handler,
		},
		{
			MethodName: "UpdateUser",
			Handler:    _DataService_UpdateUser_Handler,
		},
		{
			MethodName: "ListUsers",
			Handler:    _DataService_ListUsers_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protos.proto",
}

// StrategyEvaluatorClient is the client API for StrategyEvaluator service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StrategyEvaluatorClient interface {
	Evaluate(ctx context.Context, in *EvaulateStrategyRequest, opts ...grpc.CallOption) (*EvaluateStrategyResponse, error)
}

type strategyEvaluatorClient struct {
	cc grpc.ClientConnInterface
}

func NewStrategyEvaluatorClient(cc grpc.ClientConnInterface) StrategyEvaluatorClient {
	return &strategyEvaluatorClient{cc}
}

func (c *strategyEvaluatorClient) Evaluate(ctx context.Context, in *EvaulateStrategyRequest, opts ...grpc.CallOption) (*EvaluateStrategyResponse, error) {
	out := new(EvaluateStrategyResponse)
	err := c.cc.Invoke(ctx, "/protos.StrategyEvaluator/Evaluate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StrategyEvaluatorServer is the server API for StrategyEvaluator service.
type StrategyEvaluatorServer interface {
	Evaluate(context.Context, *EvaulateStrategyRequest) (*EvaluateStrategyResponse, error)
}

// UnimplementedStrategyEvaluatorServer can be embedded to have forward compatible implementations.
type UnimplementedStrategyEvaluatorServer struct {
}

func (*UnimplementedStrategyEvaluatorServer) Evaluate(context.Context, *EvaulateStrategyRequest) (*EvaluateStrategyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Evaluate not implemented")
}

func RegisterStrategyEvaluatorServer(s *grpc.Server, srv StrategyEvaluatorServer) {
	s.RegisterService(&_StrategyEvaluator_serviceDesc, srv)
}

func _StrategyEvaluator_Evaluate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EvaulateStrategyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StrategyEvaluatorServer).Evaluate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.StrategyEvaluator/Evaluate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StrategyEvaluatorServer).Evaluate(ctx, req.(*EvaulateStrategyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _StrategyEvaluator_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.StrategyEvaluator",
	HandlerType: (*StrategyEvaluatorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Evaluate",
			Handler:    _StrategyEvaluator_Evaluate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protos.proto",
}

// BrokerServiceClient is the client API for BrokerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BrokerServiceClient interface {
	GetCurrentSessions(ctx context.Context, in *GetCurrentSessionsRequest, opts ...grpc.CallOption) (*GetCurrentSessionsResponse, error)
	OpenSession(ctx context.Context, in *OpenSessionRequest, opts ...grpc.CallOption) (*OpenSessionResponse, error)
	OpenPosition(ctx context.Context, in *OpenPositionRequest, opts ...grpc.CallOption) (*OpenPositionResponse, error)
	ClosePosition(ctx context.Context, in *ClosePositionRequest, opts ...grpc.CallOption) (*ClosePositionResponse, error)
	GetBrokerPriceHistory(ctx context.Context, in *GetBrokerPriceHistoryRequest, opts ...grpc.CallOption) (*GetBrokerPriceHistoryResponse, error)
	SubscribeToPriceChanges(ctx context.Context, in *SubscribeToPriceChangesRequest, opts ...grpc.CallOption) (*SubscribeToPriceChangesResponse, error)
	// used by the broker services to notify the router of their existence - maybe a service mesh is better
	RegisterBroker(ctx context.Context, in *RegisterBrokerRequest, opts ...grpc.CallOption) (*RegisterBrokerResponse, error)
}

type brokerServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewBrokerServiceClient(cc grpc.ClientConnInterface) BrokerServiceClient {
	return &brokerServiceClient{cc}
}

func (c *brokerServiceClient) GetCurrentSessions(ctx context.Context, in *GetCurrentSessionsRequest, opts ...grpc.CallOption) (*GetCurrentSessionsResponse, error) {
	out := new(GetCurrentSessionsResponse)
	err := c.cc.Invoke(ctx, "/protos.BrokerService/GetCurrentSessions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *brokerServiceClient) OpenSession(ctx context.Context, in *OpenSessionRequest, opts ...grpc.CallOption) (*OpenSessionResponse, error) {
	out := new(OpenSessionResponse)
	err := c.cc.Invoke(ctx, "/protos.BrokerService/OpenSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *brokerServiceClient) OpenPosition(ctx context.Context, in *OpenPositionRequest, opts ...grpc.CallOption) (*OpenPositionResponse, error) {
	out := new(OpenPositionResponse)
	err := c.cc.Invoke(ctx, "/protos.BrokerService/OpenPosition", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *brokerServiceClient) ClosePosition(ctx context.Context, in *ClosePositionRequest, opts ...grpc.CallOption) (*ClosePositionResponse, error) {
	out := new(ClosePositionResponse)
	err := c.cc.Invoke(ctx, "/protos.BrokerService/ClosePosition", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *brokerServiceClient) GetBrokerPriceHistory(ctx context.Context, in *GetBrokerPriceHistoryRequest, opts ...grpc.CallOption) (*GetBrokerPriceHistoryResponse, error) {
	out := new(GetBrokerPriceHistoryResponse)
	err := c.cc.Invoke(ctx, "/protos.BrokerService/GetBrokerPriceHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *brokerServiceClient) SubscribeToPriceChanges(ctx context.Context, in *SubscribeToPriceChangesRequest, opts ...grpc.CallOption) (*SubscribeToPriceChangesResponse, error) {
	out := new(SubscribeToPriceChangesResponse)
	err := c.cc.Invoke(ctx, "/protos.BrokerService/SubscribeToPriceChanges", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *brokerServiceClient) RegisterBroker(ctx context.Context, in *RegisterBrokerRequest, opts ...grpc.CallOption) (*RegisterBrokerResponse, error) {
	out := new(RegisterBrokerResponse)
	err := c.cc.Invoke(ctx, "/protos.BrokerService/RegisterBroker", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BrokerServiceServer is the server API for BrokerService service.
type BrokerServiceServer interface {
	GetCurrentSessions(context.Context, *GetCurrentSessionsRequest) (*GetCurrentSessionsResponse, error)
	OpenSession(context.Context, *OpenSessionRequest) (*OpenSessionResponse, error)
	OpenPosition(context.Context, *OpenPositionRequest) (*OpenPositionResponse, error)
	ClosePosition(context.Context, *ClosePositionRequest) (*ClosePositionResponse, error)
	GetBrokerPriceHistory(context.Context, *GetBrokerPriceHistoryRequest) (*GetBrokerPriceHistoryResponse, error)
	SubscribeToPriceChanges(context.Context, *SubscribeToPriceChangesRequest) (*SubscribeToPriceChangesResponse, error)
	// used by the broker services to notify the router of their existence - maybe a service mesh is better
	RegisterBroker(context.Context, *RegisterBrokerRequest) (*RegisterBrokerResponse, error)
}

// UnimplementedBrokerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedBrokerServiceServer struct {
}

func (*UnimplementedBrokerServiceServer) GetCurrentSessions(context.Context, *GetCurrentSessionsRequest) (*GetCurrentSessionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCurrentSessions not implemented")
}
func (*UnimplementedBrokerServiceServer) OpenSession(context.Context, *OpenSessionRequest) (*OpenSessionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OpenSession not implemented")
}
func (*UnimplementedBrokerServiceServer) OpenPosition(context.Context, *OpenPositionRequest) (*OpenPositionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OpenPosition not implemented")
}
func (*UnimplementedBrokerServiceServer) ClosePosition(context.Context, *ClosePositionRequest) (*ClosePositionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClosePosition not implemented")
}
func (*UnimplementedBrokerServiceServer) GetBrokerPriceHistory(context.Context, *GetBrokerPriceHistoryRequest) (*GetBrokerPriceHistoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBrokerPriceHistory not implemented")
}
func (*UnimplementedBrokerServiceServer) SubscribeToPriceChanges(context.Context, *SubscribeToPriceChangesRequest) (*SubscribeToPriceChangesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubscribeToPriceChanges not implemented")
}
func (*UnimplementedBrokerServiceServer) RegisterBroker(context.Context, *RegisterBrokerRequest) (*RegisterBrokerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterBroker not implemented")
}

func RegisterBrokerServiceServer(s *grpc.Server, srv BrokerServiceServer) {
	s.RegisterService(&_BrokerService_serviceDesc, srv)
}

func _BrokerService_GetCurrentSessions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCurrentSessionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BrokerServiceServer).GetCurrentSessions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.BrokerService/GetCurrentSessions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BrokerServiceServer).GetCurrentSessions(ctx, req.(*GetCurrentSessionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BrokerService_OpenSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OpenSessionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BrokerServiceServer).OpenSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.BrokerService/OpenSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BrokerServiceServer).OpenSession(ctx, req.(*OpenSessionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BrokerService_OpenPosition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OpenPositionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BrokerServiceServer).OpenPosition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.BrokerService/OpenPosition",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BrokerServiceServer).OpenPosition(ctx, req.(*OpenPositionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BrokerService_ClosePosition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClosePositionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BrokerServiceServer).ClosePosition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.BrokerService/ClosePosition",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BrokerServiceServer).ClosePosition(ctx, req.(*ClosePositionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BrokerService_GetBrokerPriceHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBrokerPriceHistoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BrokerServiceServer).GetBrokerPriceHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.BrokerService/GetBrokerPriceHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BrokerServiceServer).GetBrokerPriceHistory(ctx, req.(*GetBrokerPriceHistoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BrokerService_SubscribeToPriceChanges_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubscribeToPriceChangesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BrokerServiceServer).SubscribeToPriceChanges(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.BrokerService/SubscribeToPriceChanges",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BrokerServiceServer).SubscribeToPriceChanges(ctx, req.(*SubscribeToPriceChangesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BrokerService_RegisterBroker_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterBrokerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BrokerServiceServer).RegisterBroker(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.BrokerService/RegisterBroker",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BrokerServiceServer).RegisterBroker(ctx, req.(*RegisterBrokerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BrokerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.BrokerService",
	HandlerType: (*BrokerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetCurrentSessions",
			Handler:    _BrokerService_GetCurrentSessions_Handler,
		},
		{
			MethodName: "OpenSession",
			Handler:    _BrokerService_OpenSession_Handler,
		},
		{
			MethodName: "OpenPosition",
			Handler:    _BrokerService_OpenPosition_Handler,
		},
		{
			MethodName: "ClosePosition",
			Handler:    _BrokerService_ClosePosition_Handler,
		},
		{
			MethodName: "GetBrokerPriceHistory",
			Handler:    _BrokerService_GetBrokerPriceHistory_Handler,
		},
		{
			MethodName: "SubscribeToPriceChanges",
			Handler:    _BrokerService_SubscribeToPriceChanges_Handler,
		},
		{
			MethodName: "RegisterBroker",
			Handler:    _BrokerService_RegisterBroker_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protos.proto",
}
